{"ast":null,"code":"// // \"use client\"\n\n// // import { useState, useEffect } from \"react\"\n// // import { CreditCard, Search, Loader2, AlertCircle } from \"lucide-react\"\n// // import \"./Content.css\"\n// // import DashboardSection from \"./Dashboard/DashboardSection\"\n\n// // const PaymentSection = () => {\n// //   const [payments, setPayments] = useState([])\n// //   const [loading, setLoading] = useState(true)\n// //   const [error, setError] = useState(null)\n// //   const [searchTerm, setSearchTerm] = useState(\"\")\n\n// //   const loadPayments = async () => {\n// //     try {\n// //       setLoading(true)\n// //       const response = await fetch(\"http://localhost:8080/api/payments\", {\n// //         method: \"GET\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       })\n\n// //       if (!response.ok) {\n// //         throw new Error(\"Failed to fetch payments\")\n// //       }\n\n// //       const data = await response.json()\n// //       setPayments(data)\n// //       setError(null)\n// //     } catch (err) {\n// //       console.error(\"Error loading payments:\", err)\n// //       setError(\"Failed to load payments. Please try again later.\")\n// //     } finally {\n// //       setLoading(false)\n// //     }\n// //   }\n\n// //   useEffect(() => {\n// //     loadPayments()\n// //   }, [])\n\n// //   // Filter payments based on search term\n// //   const filteredPayments = payments.filter(\n// //     (payment) => payment.OrderID?.toString().includes(searchTerm) || payment.TableID?.toString().includes(searchTerm),\n// //   )\n\n// //   // Format currency\n// //   const formatCurrency = (amount) => {\n// //     return new Intl.NumberFormat(\"vi-VN\", {\n// //       style: \"currency\",\n// //       currency: \"VND\",\n// //     }).format(amount)\n// //   }\n\n// //   // Format date\n// //   const formatDate = (dateString) => {\n// //     const date = new Date(dateString)\n// //     return new Intl.DateTimeFormat(\"vi-VN\", {\n// //       year: \"numeric\",\n// //       month: \"2-digit\",\n// //       day: \"2-digit\",\n// //       hour: \"2-digit\",\n// //       minute: \"2-digit\",\n// //     }).format(date)\n// //   }\n\n// //   return (\n// //     <div className=\"space-y-6\">\n// //       <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n// //         {error && (\n// //           <div className=\"error-alert\">\n// //             <AlertCircle className=\"h-5 w-5\" />\n// //             {error}\n// //           </div>\n// //         )}\n\n// //         <div className=\"order-search-container\">\n// //           <Search className=\"order-search-icon h-4 w-4\" />\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Tìm kiếm theo mã đơn hàng hoặc bàn...\"\n// //             className=\"order-search-input\"\n// //             value={searchTerm}\n// //             onChange={(e) => setSearchTerm(e.target.value)}\n// //           />\n// //           <button onClick={loadPayments} className=\"refresh-button\">\n// //             Làm mới\n// //           </button>\n// //         </div>\n\n// //         {loading ? (\n// //           <div className=\"loading-container\">\n// //             <Loader2 className=\"h-8 w-8 loading-spinner\" />\n// //             <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n// //           </div>\n// //         ) : (\n// //           <>\n// //             {filteredPayments.length === 0 ? (\n// //               <div className=\"empty-state\">\n// //                 <p>Không tìm thấy dữ liệu thanh toán.</p>\n// //               </div>\n// //             ) : (\n// //               <div className=\"overflow-x-auto w-full\">\n// //                 <table className=\"orders-table\">\n// //                   <thead>\n// //                     <tr>\n// //                       <th>Mã thanh toán</th>\n// //                       <th>Mã đơn hàng</th>\n// //                       <th>Bàn</th>\n// //                       <th>Tổng tiền</th>\n// //                       <th>Ngày thanh toán</th>\n// //                       <th>Trạng thái</th>\n// //                     </tr>\n// //                   </thead>\n// //                   <tbody>\n// //                     {filteredPayments.map((payment) => (\n// //                       <tr key={payment.PaymentID}>\n// //                         <td>{payment.PaymentID}</td>\n// //                         <td>{payment.OrderID}</td>\n// //                         <td>{payment.TableID}</td>\n// //                         <td className=\"font-medium\">{formatCurrency(payment.Amount)}</td>\n// //                         <td>{formatDate(payment.PaymentDate)}</td>\n// //                         <td>\n// //                           <span\n// //                             className={`order-status ${\n// //                               payment.Status === \"Completed\"\n// //                                 ? \"status-completed\"\n// //                                 : payment.Status === \"Pending\"\n// //                                   ? \"status-pending\"\n// //                                   : \"status-progress\"\n// //                             }`}\n// //                           >\n// //                             {payment.Status === \"Completed\"\n// //                               ? \"Hoàn thành\"\n// //                               : payment.Status === \"Pending\"\n// //                                 ? \"Chờ xử lý\"\n// //                                 : \"Đang xử lý\"}\n// //                           </span>\n// //                         </td>\n// //                       </tr>\n// //                     ))}\n// //                   </tbody>\n// //                 </table>\n// //               </div>\n// //             )}\n// //           </>\n// //         )}\n// //       </DashboardSection>\n// //     </div>\n// //   )\n// // }\n\n// // export default PaymentSection\n\n// \"use client\"\n\n// import { useEffect, useState } from \"react\"\n// import { Loader2, AlertCircle, CreditCard, Search, CheckCircle } from \"lucide-react\"\n// import \"./Content.css\"\n// import DashboardSection from \"./Dashboard/DashboardSection\"\n\n// const PaymentSection = () => {\n//   const [payments, setPayments] = useState([])\n//   const [loading, setLoading] = useState(true)\n//   const [error, setError] = useState(null)\n//   const [searchTerm, setSearchTerm] = useState(\"\")\n//   const [dialogOpen, setDialogOpen] = useState(false)\n//   const [selectedPayment, setSelectedPayment] = useState(null)\n//   const [pointsToUse, setPointsToUse] = useState(0)\n\n//   const fetchPayments = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/payments/all\")\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch payments\")\n//       }\n//       const data = await response.json()\n//       setPayments(data.payments || [])\n//       setError(null)\n//     } catch (err) {\n//       console.error(\"Error fetching payments:\", err)\n//       setError(\"Failed to load payments. Please try again later.\")\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   useEffect(() => {\n//     fetchPayments()\n\n//     // Set up interval to fetch data every second\n//     const intervalId = setInterval(() => {\n//       fetchPayments()\n//     }, 1000)\n\n//     // Clean up interval on component unmount\n//     return () => clearInterval(intervalId)\n//   }, [])\n\n//   const handlePaymentClick = (payment) => {\n//     if (payment.UserID !== -1) {\n//       // Open dialog for registered user\n//       setSelectedPayment(payment)\n//       setPointsToUse(0)\n//       setDialogOpen(true)\n//     } else {\n//       // Handle guest payment directly\n//       handleGuestPayment(payment)\n//     }\n//   }\n\n//   const handleGuestPayment = async (payment) => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/payments/handleGuess\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           orderId: payment.OrderID,\n//           amount: payment.TotalPrice,\n//           paymentMethod: \"cash\",\n//         }),\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to process payment\")\n//       }\n\n//       // Refresh payments after successful payment\n//       fetchPayments()\n//     } catch (err) {\n//       console.error(\"Error processing guest payment:\", err)\n//       setError(\"Failed to process payment. Please try again.\")\n//     }\n//   }\n\n//   const handleUserPayment = async () => {\n//     if (!selectedPayment) return\n\n//     try {\n//       // Calculate new amount after points deduction\n//       const pointsValue = pointsToUse * 1000\n//       const newAmount = Math.max(0, selectedPayment.TotalPrice - pointsValue)\n\n//       const response = await fetch(\"http://localhost:8080/api/payments/handleUser\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           userId: selectedPayment.UserID,\n//           orderId: selectedPayment.OrderID,\n//           usingPoints: pointsToUse > 0 ? 1 : 0,\n//           pointsUsedNumber: pointsToUse,\n//           amount: newAmount,\n//           paymentMethod: \"cash\",\n//         }),\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to process payment\")\n//       }\n\n//       // Close dialog and refresh payments\n//       setDialogOpen(false)\n//       fetchPayments()\n//     } catch (err) {\n//       console.error(\"Error processing user payment:\", err)\n//       setError(\"Failed to process payment. Please try again.\")\n//     }\n//   }\n\n//   // Format date to a more readable format\n//   const formatDate = (dateString) => {\n//     const date = new Date(dateString)\n//     return date.toLocaleString(\"vi-VN\", {\n//       year: \"numeric\",\n//       month: \"2-digit\",\n//       day: \"2-digit\",\n//       hour: \"2-digit\",\n//       minute: \"2-digit\",\n//     })\n//   }\n\n//   // Format currency\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat(\"vi-VN\", {\n//       style: \"currency\",\n//       currency: \"VND\",\n//     }).format(amount)\n//   }\n\n//   // Filter payments based on search term\n//   const filteredPayments = payments.filter(\n//     (payment) =>\n//       payment.UserName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//       payment.TableID?.toString().includes(searchTerm),\n//   )\n\n//   // Separate paid and unpaid payments\n//   const unpaidPayments = filteredPayments.filter((payment) => payment.TotalPrice === 0)\n//   const paidPayments = filteredPayments.filter((payment) => payment.TotalPrice > 0)\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n//         {error && (\n//           <div className=\"error-alert\">\n//             <AlertCircle className=\"h-5 w-5\" />\n//             {error}\n//           </div>\n//         )}\n\n//         <div className=\"order-search-container\">\n//           <Search className=\"order-search-icon h-4 w-4\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Tìm kiếm theo tên hoặc bàn...\"\n//             className=\"order-search-input\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//           />\n//         </div>\n\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <Loader2 className=\"h-8 w-8 loading-spinner\" />\n//             <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n//           </div>\n//         ) : (\n//           <>\n//             {/* Unpaid Payments Section */}\n//             <div className=\"mb-8\">\n//               <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Chưa thanh toán</h3>\n//               {unpaidPayments.length === 0 ? (\n//                 <div className=\"empty-state\">\n//                   <p>Không có đơn hàng chưa thanh toán.</p>\n//                 </div>\n//               ) : (\n//                 <div className=\"overflow-x-auto w-full\">\n//                   <table className=\"orders-table\">\n//                     <thead>\n//                       <tr>\n//                         <th>Mã đơn</th>\n//                         <th>Bàn</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Khách hàng</th>\n//                         <th>Thao tác</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {unpaidPayments.map((payment) => (\n//                         <tr key={payment.PaymentID}>\n//                           <td>{payment.OrderID}</td>\n//                           <td>{payment.TableID}</td>\n//                           <td>{formatDate(payment.OrderDate)}</td>\n//                           <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n//                           <td>\n//                             <button onClick={() => handlePaymentClick(payment)} className=\"serve-button\">\n//                               <CheckCircle className=\"h-4 w-4 mr-1\" />\n//                               Thanh toán\n//                             </button>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               )}\n//             </div>\n\n//             {/* Paid Payments Section */}\n//             <div>\n//               <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Đã thanh toán</h3>\n//               {paidPayments.length === 0 ? (\n//                 <div className=\"empty-state\">\n//                   <p>Không có đơn hàng đã thanh toán.</p>\n//                 </div>\n//               ) : (\n//                 <div className=\"overflow-x-auto w-full\">\n//                   <table className=\"orders-table\">\n//                     <thead>\n//                       <tr>\n//                         <th>Mã đơn</th>\n//                         <th>Bàn</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Khách hàng</th>\n//                         <th>Tổng tiền</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {paidPayments.map((payment) => (\n//                         <tr key={payment.PaymentID}>\n//                           <td>{payment.OrderID}</td>\n//                           <td>{payment.TableID}</td>\n//                           <td>{formatDate(payment.OrderDate)}</td>\n//                           <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n//                           <td className=\"font-medium text-green-600\">{formatCurrency(payment.TotalPrice)}</td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               )}\n//             </div>\n//           </>\n//         )}\n//       </DashboardSection>\n\n//       {/* Points Dialog */}\n//       {dialogOpen && selectedPayment && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n//           <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n//             <h3 className=\"text-lg font-semibold mb-4\">Sử dụng điểm tích lũy</h3>\n\n//             <div className=\"mb-4\">\n//               <p className=\"text-sm text-gray-600 mb-1\">Khách hàng: {selectedPayment.UserName}</p>\n//               <p className=\"text-sm text-gray-600 mb-1\">Điểm hiện có: {selectedPayment.Points} điểm</p>\n//               <p className=\"text-sm text-gray-600 mb-3\">\n//                 Giá trị đơn hàng: {formatCurrency(selectedPayment.TotalPrice)}\n//               </p>\n\n//               <div className=\"mt-4\">\n//                 <label htmlFor=\"pointsInput\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                   Nhập số điểm muốn sử dụng:\n//                 </label>\n//                 <input\n//                   id=\"pointsInput\"\n//                   type=\"number\"\n//                   min=\"0\"\n//                   max={Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))}\n//                   value={pointsToUse}\n//                   onChange={(e) => setPointsToUse(Number.parseInt(e.target.value) || 0)}\n//                   className=\"form-input w-full\"\n//                 />\n//                 <p className=\"text-xs text-gray-500 mt-1\">\n//                   1 điểm = 1.000đ (Tối đa:{\" \"}\n//                   {Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))} điểm)\n//                 </p>\n//               </div>\n\n//               <div className=\"mt-4 p-3 bg-gray-50 rounded-md\">\n//                 <p className=\"text-sm font-medium\">Tổng thanh toán sau khi sử dụng điểm:</p>\n//                 <p className=\"text-lg font-bold text-green-600\">\n//                   {formatCurrency(Math.max(0, selectedPayment.TotalPrice - pointsToUse * 1000))}\n//                 </p>\n//               </div>\n//             </div>\n\n//             <div className=\"flex justify-end space-x-3 mt-6\">\n//               <button\n//                 onClick={() => setDialogOpen(false)}\n//                 className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n//               >\n//                 Hủy\n//               </button>\n//               <button\n//                 onClick={handleUserPayment}\n//                 className=\"px-4 py-2 bg-indigo-600 rounded-md text-sm font-medium text-white hover:bg-indigo-700\"\n//               >\n//                 Xác nhận thanh toán\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default PaymentSection\n\n\"use client\";\n\nvar _jsxFileName = \"/home/dhpho/Programming/NCKH/admin-web/src/PaymentSection.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { CreditCard, Search, Loader2, AlertCircle, CheckCircle } from \"lucide-react\";\nimport \"./Content.css\";\nimport DashboardSection from \"./Dashboard/DashboardSection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaymentSection = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [pointsToUse, setPointsToUse] = useState(0);\n  const loadPayments = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8080/api/payments\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch payments\");\n      }\n      const data = await response.json();\n      setPayments(data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error loading payments:\", err);\n      setError(\"Failed to load payments. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadPayments();\n  }, []);\n\n  // Filter payments based on search term\n  const filteredPayments = payments.filter(payment => {\n    var _payment$OrderID, _payment$TableID, _payment$FullName;\n    return ((_payment$OrderID = payment.OrderID) === null || _payment$OrderID === void 0 ? void 0 : _payment$OrderID.toString().includes(searchTerm)) || ((_payment$TableID = payment.TableID) === null || _payment$TableID === void 0 ? void 0 : _payment$TableID.toString().includes(searchTerm)) || ((_payment$FullName = payment.FullName) === null || _payment$FullName === void 0 ? void 0 : _payment$FullName.toLowerCase().includes(searchTerm.toLowerCase()));\n  });\n\n  // Separate unpaid and paid orders\n  const unpaidOrders = filteredPayments.filter(payment => payment.PaymentID === null);\n  const paidOrders = filteredPayments.filter(payment => payment.PaymentID !== null);\n\n  // Format currency\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\"\n    }).format(amount);\n  };\n\n  // Format date\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat(\"vi-VN\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    }).format(date);\n  };\n  const handlePaymentClick = order => {\n    setSelectedOrder(order);\n    setPointsToUse(0);\n    setModalOpen(true);\n  };\n  const handlePaymentSubmit = async () => {\n    try {\n      // Here you would implement the actual payment processing\n      // For example:\n      // const response = await fetch(\"http://localhost:8080/api/payments/process\", {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify({\n      //     orderId: selectedOrder.OrderID,\n      //     userId: selectedOrder.UserID,\n      //     pointsUsed: pointsToUse,\n      //     amount: selectedOrder.TotalPrice - (pointsToUse * 1000) // Assuming 1 point = 1000 VND\n      //   }),\n      // })\n\n      // Close the modal and refresh data\n      setModalOpen(false);\n      loadPayments();\n    } catch (err) {\n      console.error(\"Error processing payment:\", err);\n      setError(\"Failed to process payment. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardSection, {\n      title: \"Qu\\u1EA3n l\\xFD thanh to\\xE1n\",\n      icon: /*#__PURE__*/_jsxDEV(CreditCard, {\n        className: \"h-5 w-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 58\n      }, this),\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-search-container\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"order-search-icon h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"T\\xECm ki\\u1EBFm theo m\\xE3 \\u0111\\u01A1n h\\xE0ng, b\\xE0n ho\\u1EB7c t\\xEAn kh\\xE1ch h\\xE0ng...\",\n          className: \"order-search-input\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadPayments,\n          className: \"refresh-button\",\n          children: \"L\\xE0m m\\u1EDBi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(Loader2, {\n          className: \"h-8 w-8 loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-gray-600\",\n          children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u thanh to\\xE1n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\",\n            children: \"\\u0110\\u01A1n h\\xE0ng ch\\u01B0a thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this), unpaidOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Kh\\xF4ng c\\xF3 \\u0111\\u01A1n h\\xE0ng ch\\u01B0a thanh to\\xE1n.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto w-full\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"orders-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"M\\xE3 \\u0111\\u01A1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"B\\xE0n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Kh\\xE1ch h\\xE0ng\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ng\\xE0y \\u0111\\u1EB7t\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"T\\u1ED5ng ti\\u1EC1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Thao t\\xE1c\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: unpaidOrders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.OrderID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.TableID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.FullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(order.OrderDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"font-medium\",\n                    children: formatCurrency(order.TotalPrice)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handlePaymentClick(order),\n                      className: \"serve-button\",\n                      children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                        className: \"h-4 w-4 mr-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 646,\n                        columnNumber: 31\n                      }, this), \"Thanh to\\xE1n\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 27\n                  }, this)]\n                }, order.OrderID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\",\n            children: \"\\u0110\\u01A1n h\\xE0ng \\u0111\\xE3 thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), paidOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Kh\\xF4ng c\\xF3 \\u0111\\u01A1n h\\xE0ng \\u0111\\xE3 thanh to\\xE1n.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto w-full\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"orders-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"M\\xE3 thanh to\\xE1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"M\\xE3 \\u0111\\u01A1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"B\\xE0n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Kh\\xE1ch h\\xE0ng\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ng\\xE0y \\u0111\\u1EB7t\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 674,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"T\\u1ED5ng ti\\u1EC1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: paidOrders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.PaymentID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.OrderID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.TableID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 683,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.FullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 684,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(order.OrderDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"font-medium\",\n                    children: formatCurrency(order.TotalPrice)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 27\n                  }, this)]\n                }, order.OrderID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this), modalOpen && selectedOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: [\"Thanh to\\xE1n \\u0111\\u01A1n h\\xE0ng #\", selectedOrder.OrderID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mb-1\",\n            children: [\"Kh\\xE1ch h\\xE0ng: \", selectedOrder.FullName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mb-1\",\n            children: [\"\\u0110i\\u1EC3m hi\\u1EC7n c\\xF3: \", selectedOrder.Points, \" \\u0111i\\u1EC3m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mb-3\",\n            children: [\"Gi\\xE1 tr\\u1ECB \\u0111\\u01A1n h\\xE0ng: \", formatCurrency(selectedOrder.TotalPrice)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pointsInput\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Nh\\u1EADp s\\u1ED1 \\u0111i\\u1EC3m mu\\u1ED1n s\\u1EED d\\u1EE5ng:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"pointsInput\",\n              type: \"number\",\n              min: \"0\",\n              max: Math.min(selectedOrder.Points, Math.floor(selectedOrder.TotalPrice / 1000)),\n              value: pointsToUse,\n              onChange: e => setPointsToUse(Number(e.target.value) || 0),\n              className: \"form-input w-full border border-gray-300 rounded-md px-3 py-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: [\"1 \\u0111i\\u1EC3m = 1.000\\u0111 (T\\u1ED1i \\u0111a: \", Math.min(selectedOrder.Points, Math.floor(selectedOrder.TotalPrice / 1000)), \" \", \"\\u0111i\\u1EC3m)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-3 bg-gray-50 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium\",\n              children: \"T\\u1ED5ng thanh to\\xE1n sau khi s\\u1EED d\\u1EE5ng \\u0111i\\u1EC3m:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-bold text-green-600\",\n              children: formatCurrency(Math.max(0, selectedOrder.TotalPrice - pointsToUse * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setModalOpen(false),\n            className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\",\n            children: \"H\\u1EE7y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePaymentSubmit,\n            className: \"px-4 py-2 bg-indigo-600 rounded-md text-sm font-medium text-white hover:bg-indigo-700\",\n            children: \"X\\xE1c nh\\u1EADn thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 586,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentSection, \"f8okcbJFjZN+aIKcIqFuvYwQC+E=\");\n_c = PaymentSection;\nexport default PaymentSection;\nvar _c;\n$RefreshReg$(_c, \"PaymentSection\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","CreditCard","Search","Loader2","AlertCircle","CheckCircle","DashboardSection","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentSection","payments","setPayments","loading","setLoading","error","setError","searchTerm","setSearchTerm","modalOpen","setModalOpen","selectedOrder","setSelectedOrder","pointsToUse","setPointsToUse","loadPayments","response","fetch","method","headers","ok","Error","data","json","err","console","filteredPayments","filter","payment","_payment$OrderID","_payment$TableID","_payment$FullName","OrderID","toString","includes","TableID","FullName","toLowerCase","unpaidOrders","PaymentID","paidOrders","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","date","Date","DateTimeFormat","year","month","day","hour","minute","handlePaymentClick","order","handlePaymentSubmit","className","children","title","icon","fileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","OrderDate","TotalPrice","Points","htmlFor","id","min","max","Math","floor","Number","_c","$RefreshReg$"],"sources":["/home/dhpho/Programming/NCKH/admin-web/src/PaymentSection.js"],"sourcesContent":["// // \"use client\"\n\n// // import { useState, useEffect } from \"react\"\n// // import { CreditCard, Search, Loader2, AlertCircle } from \"lucide-react\"\n// // import \"./Content.css\"\n// // import DashboardSection from \"./Dashboard/DashboardSection\"\n\n// // const PaymentSection = () => {\n// //   const [payments, setPayments] = useState([])\n// //   const [loading, setLoading] = useState(true)\n// //   const [error, setError] = useState(null)\n// //   const [searchTerm, setSearchTerm] = useState(\"\")\n\n// //   const loadPayments = async () => {\n// //     try {\n// //       setLoading(true)\n// //       const response = await fetch(\"http://localhost:8080/api/payments\", {\n// //         method: \"GET\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       })\n\n// //       if (!response.ok) {\n// //         throw new Error(\"Failed to fetch payments\")\n// //       }\n\n// //       const data = await response.json()\n// //       setPayments(data)\n// //       setError(null)\n// //     } catch (err) {\n// //       console.error(\"Error loading payments:\", err)\n// //       setError(\"Failed to load payments. Please try again later.\")\n// //     } finally {\n// //       setLoading(false)\n// //     }\n// //   }\n\n// //   useEffect(() => {\n// //     loadPayments()\n// //   }, [])\n\n// //   // Filter payments based on search term\n// //   const filteredPayments = payments.filter(\n// //     (payment) => payment.OrderID?.toString().includes(searchTerm) || payment.TableID?.toString().includes(searchTerm),\n// //   )\n\n// //   // Format currency\n// //   const formatCurrency = (amount) => {\n// //     return new Intl.NumberFormat(\"vi-VN\", {\n// //       style: \"currency\",\n// //       currency: \"VND\",\n// //     }).format(amount)\n// //   }\n\n// //   // Format date\n// //   const formatDate = (dateString) => {\n// //     const date = new Date(dateString)\n// //     return new Intl.DateTimeFormat(\"vi-VN\", {\n// //       year: \"numeric\",\n// //       month: \"2-digit\",\n// //       day: \"2-digit\",\n// //       hour: \"2-digit\",\n// //       minute: \"2-digit\",\n// //     }).format(date)\n// //   }\n\n// //   return (\n// //     <div className=\"space-y-6\">\n// //       <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n// //         {error && (\n// //           <div className=\"error-alert\">\n// //             <AlertCircle className=\"h-5 w-5\" />\n// //             {error}\n// //           </div>\n// //         )}\n\n// //         <div className=\"order-search-container\">\n// //           <Search className=\"order-search-icon h-4 w-4\" />\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Tìm kiếm theo mã đơn hàng hoặc bàn...\"\n// //             className=\"order-search-input\"\n// //             value={searchTerm}\n// //             onChange={(e) => setSearchTerm(e.target.value)}\n// //           />\n// //           <button onClick={loadPayments} className=\"refresh-button\">\n// //             Làm mới\n// //           </button>\n// //         </div>\n\n// //         {loading ? (\n// //           <div className=\"loading-container\">\n// //             <Loader2 className=\"h-8 w-8 loading-spinner\" />\n// //             <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n// //           </div>\n// //         ) : (\n// //           <>\n// //             {filteredPayments.length === 0 ? (\n// //               <div className=\"empty-state\">\n// //                 <p>Không tìm thấy dữ liệu thanh toán.</p>\n// //               </div>\n// //             ) : (\n// //               <div className=\"overflow-x-auto w-full\">\n// //                 <table className=\"orders-table\">\n// //                   <thead>\n// //                     <tr>\n// //                       <th>Mã thanh toán</th>\n// //                       <th>Mã đơn hàng</th>\n// //                       <th>Bàn</th>\n// //                       <th>Tổng tiền</th>\n// //                       <th>Ngày thanh toán</th>\n// //                       <th>Trạng thái</th>\n// //                     </tr>\n// //                   </thead>\n// //                   <tbody>\n// //                     {filteredPayments.map((payment) => (\n// //                       <tr key={payment.PaymentID}>\n// //                         <td>{payment.PaymentID}</td>\n// //                         <td>{payment.OrderID}</td>\n// //                         <td>{payment.TableID}</td>\n// //                         <td className=\"font-medium\">{formatCurrency(payment.Amount)}</td>\n// //                         <td>{formatDate(payment.PaymentDate)}</td>\n// //                         <td>\n// //                           <span\n// //                             className={`order-status ${\n// //                               payment.Status === \"Completed\"\n// //                                 ? \"status-completed\"\n// //                                 : payment.Status === \"Pending\"\n// //                                   ? \"status-pending\"\n// //                                   : \"status-progress\"\n// //                             }`}\n// //                           >\n// //                             {payment.Status === \"Completed\"\n// //                               ? \"Hoàn thành\"\n// //                               : payment.Status === \"Pending\"\n// //                                 ? \"Chờ xử lý\"\n// //                                 : \"Đang xử lý\"}\n// //                           </span>\n// //                         </td>\n// //                       </tr>\n// //                     ))}\n// //                   </tbody>\n// //                 </table>\n// //               </div>\n// //             )}\n// //           </>\n// //         )}\n// //       </DashboardSection>\n// //     </div>\n// //   )\n// // }\n\n// // export default PaymentSection\n\n\n// \"use client\"\n\n// import { useEffect, useState } from \"react\"\n// import { Loader2, AlertCircle, CreditCard, Search, CheckCircle } from \"lucide-react\"\n// import \"./Content.css\"\n// import DashboardSection from \"./Dashboard/DashboardSection\"\n\n// const PaymentSection = () => {\n//   const [payments, setPayments] = useState([])\n//   const [loading, setLoading] = useState(true)\n//   const [error, setError] = useState(null)\n//   const [searchTerm, setSearchTerm] = useState(\"\")\n//   const [dialogOpen, setDialogOpen] = useState(false)\n//   const [selectedPayment, setSelectedPayment] = useState(null)\n//   const [pointsToUse, setPointsToUse] = useState(0)\n\n//   const fetchPayments = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/payments/all\")\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch payments\")\n//       }\n//       const data = await response.json()\n//       setPayments(data.payments || [])\n//       setError(null)\n//     } catch (err) {\n//       console.error(\"Error fetching payments:\", err)\n//       setError(\"Failed to load payments. Please try again later.\")\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   useEffect(() => {\n//     fetchPayments()\n\n//     // Set up interval to fetch data every second\n//     const intervalId = setInterval(() => {\n//       fetchPayments()\n//     }, 1000)\n\n//     // Clean up interval on component unmount\n//     return () => clearInterval(intervalId)\n//   }, [])\n\n//   const handlePaymentClick = (payment) => {\n//     if (payment.UserID !== -1) {\n//       // Open dialog for registered user\n//       setSelectedPayment(payment)\n//       setPointsToUse(0)\n//       setDialogOpen(true)\n//     } else {\n//       // Handle guest payment directly\n//       handleGuestPayment(payment)\n//     }\n//   }\n\n//   const handleGuestPayment = async (payment) => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/payments/handleGuess\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           orderId: payment.OrderID,\n//           amount: payment.TotalPrice,\n//           paymentMethod: \"cash\",\n//         }),\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to process payment\")\n//       }\n\n//       // Refresh payments after successful payment\n//       fetchPayments()\n//     } catch (err) {\n//       console.error(\"Error processing guest payment:\", err)\n//       setError(\"Failed to process payment. Please try again.\")\n//     }\n//   }\n\n//   const handleUserPayment = async () => {\n//     if (!selectedPayment) return\n\n//     try {\n//       // Calculate new amount after points deduction\n//       const pointsValue = pointsToUse * 1000\n//       const newAmount = Math.max(0, selectedPayment.TotalPrice - pointsValue)\n\n//       const response = await fetch(\"http://localhost:8080/api/payments/handleUser\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           userId: selectedPayment.UserID,\n//           orderId: selectedPayment.OrderID,\n//           usingPoints: pointsToUse > 0 ? 1 : 0,\n//           pointsUsedNumber: pointsToUse,\n//           amount: newAmount,\n//           paymentMethod: \"cash\",\n//         }),\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to process payment\")\n//       }\n\n//       // Close dialog and refresh payments\n//       setDialogOpen(false)\n//       fetchPayments()\n//     } catch (err) {\n//       console.error(\"Error processing user payment:\", err)\n//       setError(\"Failed to process payment. Please try again.\")\n//     }\n//   }\n\n//   // Format date to a more readable format\n//   const formatDate = (dateString) => {\n//     const date = new Date(dateString)\n//     return date.toLocaleString(\"vi-VN\", {\n//       year: \"numeric\",\n//       month: \"2-digit\",\n//       day: \"2-digit\",\n//       hour: \"2-digit\",\n//       minute: \"2-digit\",\n//     })\n//   }\n\n//   // Format currency\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat(\"vi-VN\", {\n//       style: \"currency\",\n//       currency: \"VND\",\n//     }).format(amount)\n//   }\n\n//   // Filter payments based on search term\n//   const filteredPayments = payments.filter(\n//     (payment) =>\n//       payment.UserName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//       payment.TableID?.toString().includes(searchTerm),\n//   )\n\n//   // Separate paid and unpaid payments\n//   const unpaidPayments = filteredPayments.filter((payment) => payment.TotalPrice === 0)\n//   const paidPayments = filteredPayments.filter((payment) => payment.TotalPrice > 0)\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n//         {error && (\n//           <div className=\"error-alert\">\n//             <AlertCircle className=\"h-5 w-5\" />\n//             {error}\n//           </div>\n//         )}\n\n//         <div className=\"order-search-container\">\n//           <Search className=\"order-search-icon h-4 w-4\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Tìm kiếm theo tên hoặc bàn...\"\n//             className=\"order-search-input\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//           />\n//         </div>\n\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <Loader2 className=\"h-8 w-8 loading-spinner\" />\n//             <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n//           </div>\n//         ) : (\n//           <>\n//             {/* Unpaid Payments Section */}\n//             <div className=\"mb-8\">\n//               <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Chưa thanh toán</h3>\n//               {unpaidPayments.length === 0 ? (\n//                 <div className=\"empty-state\">\n//                   <p>Không có đơn hàng chưa thanh toán.</p>\n//                 </div>\n//               ) : (\n//                 <div className=\"overflow-x-auto w-full\">\n//                   <table className=\"orders-table\">\n//                     <thead>\n//                       <tr>\n//                         <th>Mã đơn</th>\n//                         <th>Bàn</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Khách hàng</th>\n//                         <th>Thao tác</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {unpaidPayments.map((payment) => (\n//                         <tr key={payment.PaymentID}>\n//                           <td>{payment.OrderID}</td>\n//                           <td>{payment.TableID}</td>\n//                           <td>{formatDate(payment.OrderDate)}</td>\n//                           <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n//                           <td>\n//                             <button onClick={() => handlePaymentClick(payment)} className=\"serve-button\">\n//                               <CheckCircle className=\"h-4 w-4 mr-1\" />\n//                               Thanh toán\n//                             </button>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               )}\n//             </div>\n\n//             {/* Paid Payments Section */}\n//             <div>\n//               <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Đã thanh toán</h3>\n//               {paidPayments.length === 0 ? (\n//                 <div className=\"empty-state\">\n//                   <p>Không có đơn hàng đã thanh toán.</p>\n//                 </div>\n//               ) : (\n//                 <div className=\"overflow-x-auto w-full\">\n//                   <table className=\"orders-table\">\n//                     <thead>\n//                       <tr>\n//                         <th>Mã đơn</th>\n//                         <th>Bàn</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Khách hàng</th>\n//                         <th>Tổng tiền</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {paidPayments.map((payment) => (\n//                         <tr key={payment.PaymentID}>\n//                           <td>{payment.OrderID}</td>\n//                           <td>{payment.TableID}</td>\n//                           <td>{formatDate(payment.OrderDate)}</td>\n//                           <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n//                           <td className=\"font-medium text-green-600\">{formatCurrency(payment.TotalPrice)}</td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               )}\n//             </div>\n//           </>\n//         )}\n//       </DashboardSection>\n\n//       {/* Points Dialog */}\n//       {dialogOpen && selectedPayment && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n//           <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n//             <h3 className=\"text-lg font-semibold mb-4\">Sử dụng điểm tích lũy</h3>\n\n//             <div className=\"mb-4\">\n//               <p className=\"text-sm text-gray-600 mb-1\">Khách hàng: {selectedPayment.UserName}</p>\n//               <p className=\"text-sm text-gray-600 mb-1\">Điểm hiện có: {selectedPayment.Points} điểm</p>\n//               <p className=\"text-sm text-gray-600 mb-3\">\n//                 Giá trị đơn hàng: {formatCurrency(selectedPayment.TotalPrice)}\n//               </p>\n\n//               <div className=\"mt-4\">\n//                 <label htmlFor=\"pointsInput\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                   Nhập số điểm muốn sử dụng:\n//                 </label>\n//                 <input\n//                   id=\"pointsInput\"\n//                   type=\"number\"\n//                   min=\"0\"\n//                   max={Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))}\n//                   value={pointsToUse}\n//                   onChange={(e) => setPointsToUse(Number.parseInt(e.target.value) || 0)}\n//                   className=\"form-input w-full\"\n//                 />\n//                 <p className=\"text-xs text-gray-500 mt-1\">\n//                   1 điểm = 1.000đ (Tối đa:{\" \"}\n//                   {Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))} điểm)\n//                 </p>\n//               </div>\n\n//               <div className=\"mt-4 p-3 bg-gray-50 rounded-md\">\n//                 <p className=\"text-sm font-medium\">Tổng thanh toán sau khi sử dụng điểm:</p>\n//                 <p className=\"text-lg font-bold text-green-600\">\n//                   {formatCurrency(Math.max(0, selectedPayment.TotalPrice - pointsToUse * 1000))}\n//                 </p>\n//               </div>\n//             </div>\n\n//             <div className=\"flex justify-end space-x-3 mt-6\">\n//               <button\n//                 onClick={() => setDialogOpen(false)}\n//                 className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n//               >\n//                 Hủy\n//               </button>\n//               <button\n//                 onClick={handleUserPayment}\n//                 className=\"px-4 py-2 bg-indigo-600 rounded-md text-sm font-medium text-white hover:bg-indigo-700\"\n//               >\n//                 Xác nhận thanh toán\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default PaymentSection\n\n\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { CreditCard, Search, Loader2, AlertCircle, CheckCircle } from \"lucide-react\"\nimport \"./Content.css\"\nimport DashboardSection from \"./Dashboard/DashboardSection\"\n\nconst PaymentSection = () => {\n  const [payments, setPayments] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [modalOpen, setModalOpen] = useState(false)\n  const [selectedOrder, setSelectedOrder] = useState(null)\n  const [pointsToUse, setPointsToUse] = useState(0)\n\n  const loadPayments = async () => {\n    try {\n      setLoading(true)\n      const response = await fetch(\"http://localhost:8080/api/payments\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch payments\")\n      }\n\n      const data = await response.json()\n      setPayments(data)\n      setError(null)\n    } catch (err) {\n      console.error(\"Error loading payments:\", err)\n      setError(\"Failed to load payments. Please try again later.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    loadPayments()\n  }, [])\n\n  // Filter payments based on search term\n  const filteredPayments = payments.filter(\n    (payment) =>\n      payment.OrderID?.toString().includes(searchTerm) ||\n      payment.TableID?.toString().includes(searchTerm) ||\n      payment.FullName?.toLowerCase().includes(searchTerm.toLowerCase()),\n  )\n\n  // Separate unpaid and paid orders\n  const unpaidOrders = filteredPayments.filter((payment) => payment.PaymentID === null)\n  const paidOrders = filteredPayments.filter((payment) => payment.PaymentID !== null)\n\n  // Format currency\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\",\n    }).format(amount)\n  }\n\n  // Format date\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    return new Intl.DateTimeFormat(\"vi-VN\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    }).format(date)\n  }\n\n  const handlePaymentClick = (order) => {\n    setSelectedOrder(order)\n    setPointsToUse(0)\n    setModalOpen(true)\n  }\n\n  const handlePaymentSubmit = async () => {\n    try {\n      // Here you would implement the actual payment processing\n      // For example:\n      // const response = await fetch(\"http://localhost:8080/api/payments/process\", {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify({\n      //     orderId: selectedOrder.OrderID,\n      //     userId: selectedOrder.UserID,\n      //     pointsUsed: pointsToUse,\n      //     amount: selectedOrder.TotalPrice - (pointsToUse * 1000) // Assuming 1 point = 1000 VND\n      //   }),\n      // })\n\n      // Close the modal and refresh data\n      setModalOpen(false)\n      loadPayments()\n    } catch (err) {\n      console.error(\"Error processing payment:\", err)\n      setError(\"Failed to process payment. Please try again.\")\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n        {error && (\n          <div className=\"error-alert\">\n            <AlertCircle className=\"h-5 w-5\" />\n            {error}\n          </div>\n        )}\n\n        <div className=\"order-search-container\">\n          <Search className=\"order-search-icon h-4 w-4\" />\n          <input\n            type=\"text\"\n            placeholder=\"Tìm kiếm theo mã đơn hàng, bàn hoặc tên khách hàng...\"\n            className=\"order-search-input\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <button onClick={loadPayments} className=\"refresh-button\">\n            Làm mới\n          </button>\n        </div>\n\n        {loading ? (\n          <div className=\"loading-container\">\n            <Loader2 className=\"h-8 w-8 loading-spinner\" />\n            <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n          </div>\n        ) : (\n          <>\n            {/* Unpaid Orders Section */}\n            <div className=\"mb-8\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Đơn hàng chưa thanh toán</h3>\n              {unpaidOrders.length === 0 ? (\n                <div className=\"empty-state\">\n                  <p>Không có đơn hàng chưa thanh toán.</p>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto w-full\">\n                  <table className=\"orders-table\">\n                    <thead>\n                      <tr>\n                        <th>Mã đơn</th>\n                        <th>Bàn</th>\n                        <th>Khách hàng</th>\n                        <th>Ngày đặt</th>\n                        <th>Tổng tiền</th>\n                        <th>Thao tác</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {unpaidOrders.map((order) => (\n                        <tr key={order.OrderID}>\n                          <td>{order.OrderID}</td>\n                          <td>{order.TableID}</td>\n                          <td>{order.FullName}</td>\n                          <td>{formatDate(order.OrderDate)}</td>\n                          <td className=\"font-medium\">{formatCurrency(order.TotalPrice)}</td>\n                          <td>\n                            <button onClick={() => handlePaymentClick(order)} className=\"serve-button\">\n                              <CheckCircle className=\"h-4 w-4 mr-1\" />\n                              Thanh toán\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n\n            {/* Paid Orders Section */}\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Đơn hàng đã thanh toán</h3>\n              {paidOrders.length === 0 ? (\n                <div className=\"empty-state\">\n                  <p>Không có đơn hàng đã thanh toán.</p>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto w-full\">\n                  <table className=\"orders-table\">\n                    <thead>\n                      <tr>\n                        <th>Mã thanh toán</th>\n                        <th>Mã đơn</th>\n                        <th>Bàn</th>\n                        <th>Khách hàng</th>\n                        <th>Ngày đặt</th>\n                        <th>Tổng tiền</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {paidOrders.map((order) => (\n                        <tr key={order.OrderID}>\n                          <td>{order.PaymentID}</td>\n                          <td>{order.OrderID}</td>\n                          <td>{order.TableID}</td>\n                          <td>{order.FullName}</td>\n                          <td>{formatDate(order.OrderDate)}</td>\n                          <td className=\"font-medium\">{formatCurrency(order.TotalPrice)}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </DashboardSection>\n\n      {/* Payment Modal */}\n      {modalOpen && selectedOrder && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Thanh toán đơn hàng #{selectedOrder.OrderID}</h3>\n\n            <div className=\"mb-4\">\n              <p className=\"text-sm text-gray-600 mb-1\">Khách hàng: {selectedOrder.FullName}</p>\n              <p className=\"text-sm text-gray-600 mb-1\">Điểm hiện có: {selectedOrder.Points} điểm</p>\n              <p className=\"text-sm text-gray-600 mb-3\">Giá trị đơn hàng: {formatCurrency(selectedOrder.TotalPrice)}</p>\n\n              <div className=\"mt-4\">\n                <label htmlFor=\"pointsInput\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Nhập số điểm muốn sử dụng:\n                </label>\n                <input\n                  id=\"pointsInput\"\n                  type=\"number\"\n                  min=\"0\"\n                  max={Math.min(selectedOrder.Points, Math.floor(selectedOrder.TotalPrice / 1000))}\n                  value={pointsToUse}\n                  onChange={(e) => setPointsToUse(Number(e.target.value) || 0)}\n                  className=\"form-input w-full border border-gray-300 rounded-md px-3 py-2\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  1 điểm = 1.000đ (Tối đa: {Math.min(selectedOrder.Points, Math.floor(selectedOrder.TotalPrice / 1000))}{\" \"}\n                  điểm)\n                </p>\n              </div>\n\n              <div className=\"mt-4 p-3 bg-gray-50 rounded-md\">\n                <p className=\"text-sm font-medium\">Tổng thanh toán sau khi sử dụng điểm:</p>\n                <p className=\"text-lg font-bold text-green-600\">\n                  {formatCurrency(Math.max(0, selectedOrder.TotalPrice - pointsToUse * 1000))}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex justify-end space-x-3 mt-6\">\n              <button\n                onClick={() => setModalOpen(false)}\n                className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n              >\n                Hủy\n              </button>\n              <button\n                onClick={handlePaymentSubmit}\n                className=\"px-4 py-2 bg-indigo-600 rounded-md text-sm font-medium text-white hover:bg-indigo-700\"\n              >\n                Xác nhận thanh toán\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default PaymentSection\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}