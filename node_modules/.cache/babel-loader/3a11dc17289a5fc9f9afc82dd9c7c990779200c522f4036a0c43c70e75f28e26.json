{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/dhpho/Programming/NCKH/admin-web/src/CallStaffNotification.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./CallStaffNotification.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallStaffNotification = () => {\n  _s();\n  const [callStaffs, setCallStaffs] = useState([]);\n  const [isVisible, setIsVisible] = useState(true);\n  const fetchCallStaffs = async () => {\n    try {\n      console.log(\"Đang gọi API get-call-staffs...\");\n      const response = await fetch(\"http://localhost:8080/api/users/get-call-staffs\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Dữ liệu nhận được:\", data);\n        setCallStaffs(data);\n      } else {\n        console.error(\"Lỗi khi lấy dữ liệu:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi gọi API:\", error);\n    }\n  };\n  const updateCallStaff = async callStaffId => {\n    try {\n      console.log(\"Đang cập nhật callStaffId:\", callStaffId);\n      setCallStaffs(callStaffs.filter(staff => staff.CallStaffID !== callStaffId));\n      const response = await fetch(\"http://localhost:8080/api/users/update-call-staff\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          callStaffId: callStaffId\n        })\n      });\n      if (!response.ok) {\n        console.error(\"Lỗi khi cập nhật:\", response.statusText);\n        fetchCallStaffs();\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi gọi API cập nhật:\", error);\n      fetchCallStaffs();\n    }\n  };\n  useEffect(() => {\n    console.log(\"Component đã mount, gọi API lần đầu\");\n    fetchCallStaffs();\n    const intervalId = setInterval(() => {\n      console.log(\"Đang gọi API định kỳ...\");\n      fetchCallStaffs();\n    }, 500);\n    return () => {\n      console.log(\"Component unmount, xóa interval\");\n      clearInterval(intervalId);\n    };\n  }, []);\n  console.log(\"Rendering component với\", callStaffs.length, \"thông báo\");\n  console.log(\"isVisible:\", isVisible);\n  if (callStaffs.length === 0) {\n    console.log(\"Không có thông báo, không hiển thị gì\");\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"call-staff-notification\",\n    style: {\n      display: \"block\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Th\\xF4ng b\\xE1o g\\u1ECDi nh\\xE2n vi\\xEAn (\", callStaffs.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: () => setIsVisible(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-content\",\n      children: callStaffs.map(staff => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"B\\xE0n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), \" \", staff.TableID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tr\\u1EA1ng th\\xE1i:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), \" \", staff.Status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Th\\u1EDDi gian:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), \" \", new Date(staff.CreatedAt).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"complete-button\",\n          onClick: () => updateCallStaff(staff.CallStaffID),\n          children: \"\\u0110\\xE3 x\\u1EED l\\xFD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, staff.CallStaffID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CallStaffNotification, \"a7CjGFIhqeSfCKze+9MR6Ont0Gc=\");\n_c = CallStaffNotification;\nexport default CallStaffNotification;\nvar _c;\n$RefreshReg$(_c, \"CallStaffNotification\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","jsxDEV","_jsxDEV","CallStaffNotification","callStaffs","setCallStaffs","isVisible","setIsVisible","fetchCallStaffs","console","log","response","fetch","method","headers","ok","data","json","error","statusText","updateCallStaff","callStaffId","filter","staff","CallStaffID","body","JSON","stringify","intervalId","setInterval","clearInterval","length","className","style","display","children","fileName","lineNumber","columnNumber","onClick","map","TableID","Status","Date","CreatedAt","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/home/dhpho/Programming/NCKH/admin-web/src/CallStaffNotification.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport \"./CallStaffNotification.css\"\n\nconst CallStaffNotification = () => {\n  const [callStaffs, setCallStaffs] = useState([])\n  const [isVisible, setIsVisible] = useState(true)\n\n  const fetchCallStaffs = async () => {\n    try {\n      console.log(\"Đang gọi API get-call-staffs...\")\n\n      const response = await fetch(\"http://localhost:8080/api/users/get-call-staffs\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      if (response.ok) {\n        const data = await response.json()\n        console.log(\"Dữ liệu nhận được:\", data)\n        setCallStaffs(data)\n      } else {\n        console.error(\"Lỗi khi lấy dữ liệu:\", response.statusText)\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi gọi API:\", error)\n    }\n  }\n\n  const updateCallStaff = async (callStaffId) => {\n    try {\n      console.log(\"Đang cập nhật callStaffId:\", callStaffId)\n\n      setCallStaffs(callStaffs.filter((staff) => staff.CallStaffID !== callStaffId))\n\n      const response = await fetch(\"http://localhost:8080/api/users/update-call-staff\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ callStaffId: callStaffId }),\n      })\n\n      if (!response.ok) {\n        console.error(\"Lỗi khi cập nhật:\", response.statusText)\n        fetchCallStaffs()\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi gọi API cập nhật:\", error)\n      fetchCallStaffs()\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"Component đã mount, gọi API lần đầu\")\n    fetchCallStaffs()\n\n    const intervalId = setInterval(() => {\n      console.log(\"Đang gọi API định kỳ...\")\n      fetchCallStaffs()\n    }, 500)\n\n    return () => {\n      console.log(\"Component unmount, xóa interval\")\n      clearInterval(intervalId)\n    }\n  }, [])\n\n  console.log(\"Rendering component với\", callStaffs.length, \"thông báo\")\n  console.log(\"isVisible:\", isVisible)\n\n  if (callStaffs.length === 0) {\n    console.log(\"Không có thông báo, không hiển thị gì\")\n    return null\n  }\n\n  return (\n    <div className=\"call-staff-notification\" style={{ display: \"block\" }}>\n      <div className=\"notification-header\">\n        <h3>Thông báo gọi nhân viên ({callStaffs.length})</h3>\n        <button className=\"close-button\" onClick={() => setIsVisible(false)}>\n          ×\n        </button>\n      </div>\n      <div className=\"notification-content\">\n        {callStaffs.map((staff) => (\n          <div key={staff.CallStaffID} className=\"notification-item\">\n            <div className=\"notification-info\">\n              <p>\n                <strong>Bàn:</strong> {staff.TableID}\n              </p>\n              <p>\n                <strong>Trạng thái:</strong> {staff.Status}\n              </p>\n              <p>\n                <strong>Thời gian:</strong> {new Date(staff.CreatedAt).toLocaleTimeString()}\n              </p>\n            </div>\n            <button className=\"complete-button\" onClick={() => updateCallStaff(staff.CallStaffID)}>\n              Đã xử lý\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default CallStaffNotification\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}