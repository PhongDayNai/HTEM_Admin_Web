{"ast":null,"code":"// // \"use client\";\n\n// // import { useState, useEffect, useMemo } from \"react\";\n// // import \"./Content.css\";\n\n// // const MenuManager = ({ icon }) => {\n// //   const [menuData, setMenuData] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   // Hàm lấy dữ liệu menu từ API\n// //   const fetchData = async () => {\n// //     try {\n// //       setLoading(true);\n// //       const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n// //         method: \"GET\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`Lỗi: ${response.status}`);\n// //       }\n\n// //       const data = await response.json();\n// //       setMenuData(data.setList || []);\n// //       setError(null);\n// //     } catch (err) {\n// //       console.error(\"Lấy dữ liệu menu thất bại:\", err);\n// //       setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   // Lấy dữ liệu khi component được mount\n// //   useEffect(() => {\n// //     fetchData();\n// //   }, []);\n\n// //   // Hàm lấy đường dẫn ảnh dựa trên tên set\n// //   const getImagePath = useMemo(() => {\n// //     return (setName) => {\n// //       console.log(setName);\n// //       if (setName === \"Hotpot\") {\n// //         return \"/assets/Buffet_Lau.png\";\n// //       } else if (setName === \"Seafood Hotpot\") {\n// //         return \"/assets/Buffet_Lau_Hai_San.png\";\n// //       } else if (setName === \"BBQ\") {\n// //         return \"/assets/Buffet_BBQ.png\";\n// //       } else if (setName.startsWith(\"Sashimi\")) {\n// //         const formattedName = setName.replace(/\\s+/g, \"_\");\n// //         console.log(`/assets/Buffet_${formattedName}.png`);\n// //         return `/assets/Buffet_${formattedName}.png`;\n// //       } else {\n// //         const formattedName = setName.replace(/\\s+/g, \"_\");\n// //         console.log(`/assets/Buffet_${formattedName}.png`);\n// //         return `/assets/Buffet_${formattedName}.png`;\n// //       }\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div className=\"dashboard-section\">\n// //       <div className=\"section-header\">\n// //         <div className=\"section-title\">\n// //           {icon && <span className=\"section-icon\">{icon}</span>}\n// //           <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n// //         </div>\n// //         <button onClick={fetchData} className=\"refresh-button\">\n// //           Làm mới Menu\n// //         </button>\n// //       </div>\n\n// //       <div className=\"section-content\">\n// //         {loading ? (\n// //           <div className=\"loading-container\">\n// //             <svg\n// //               className=\"animate-spin h-8 w-8 text-indigo-600\"\n// //               xmlns=\"http://www.w3.org/2000/svg\"\n// //               fill=\"none\"\n// //               viewBox=\"0 0 24 24\"\n// //             >\n// //               <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //               <path\n// //                 className=\"opacity-75\"\n// //                 fill=\"currentColor\"\n// //                 d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n// //               ></path>\n// //             </svg>\n// //           </div>\n// //         ) : error ? (\n// //           <div className=\"error-alert\">\n// //             <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n// //               <path\n// //                 fillRule=\"evenodd\"\n// //                 d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n// //                 clipRule=\"evenodd\"\n// //               ></path>\n// //             </svg>\n// //             <span>{error}</span>\n// //           </div>\n// //         ) : menuData.length === 0 ? (\n// //           <div className=\"empty-state\">\n// //             <p>Không tìm thấy mục menu.</p>\n// //           </div>\n// //         ) : (\n// //           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n// //             {menuData.map((set) => (\n// //               <div key={set.id} className=\"dashboard-card card-gradient-indigo\">\n// //                 <div className=\"card-content\">\n// //                   <div className=\"card-info\">\n// //                     <h3>{set.Name}</h3>\n// //                     <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n// //                     <p className=\"text-sm text-gray-500\">\n// //                       {set.Dishes ? `${set.Dishes.length} món` : \"Không có món nào\"}\n// //                     </p>\n// //                   </div>\n// //                   <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n// //                     <img\n// //                       src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n// //                       alt={set.Name}\n// //                       className=\"w-full h-full object-cover\"\n// //                       onError={(e) => {\n// //                         console.log(`Tải ảnh thất bại: ${e.target.src}`);\n// //                         e.target.onerror = null;\n// //                         e.target.src = \"/assets/default_set.png\";\n// //                       }}\n// //                     />\n// //                   </div>\n// //                 </div>\n// //               </div>\n// //             ))}\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default MenuManager;\n\n// \"use client\";\n\n// import { useState, useEffect, useMemo } from \"react\";\n// import \"./Content.css\";\n\n// const MenuManager = ({ icon }) => {\n//   const [menuData, setMenuData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [expandedSet, setExpandedSet] = useState(null); // Trạng thái mở rộng\n\n//   // Hàm lấy dữ liệu menu từ API\n//   const fetchData = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Lỗi: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setMenuData(data.setList || []);\n//       setError(null);\n//     } catch (err) {\n//       console.error(\"Lấy dữ liệu menu thất bại:\", err);\n//       setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Lấy dữ liệu khi component được mount\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   // Hàm lấy đường dẫn ảnh dựa trên tên set\n//   const getImagePath = useMemo(() => {\n//     return (setName) => {\n//       console.log(setName);\n//       if (setName === \"Hotpot\") {\n//         return \"/assets/Buffet_Lau.png\";\n//       } else if (setName === \"Seafood Hotpot\") {\n//         return \"/assets/Buffet_Lau_Hai_San.png\";\n//       } else if (setName === \"BBQ\") {\n//         return \"/assets/Buffet_BBQ.png\";\n//       } else if (setName.startsWith(\"Sashimi\")) {\n//         const formattedName = setName.replace(/\\s+/g, \"_\");\n//         console.log(`/assets/Buffet_${formattedName}.png`);\n//         return `/assets/Buffet_${formattedName}.png`;\n//       } else {\n//         const formattedName = setName.replace(/\\s+/g, \"_\");\n//         console.log(`/assets/Buffet_${formattedName}.png`);\n//         return `/assets/Buffet_${formattedName}.png`;\n//       }\n//     };\n//   }, []);\n\n//   // Hàm dịch Category sang tiếng Việt\n//   const translateCategory = (category) => {\n//     const translations = {\n//       Appetizer: \"Khai vị\",\n//       Main: \"Món chính\",\n//       Dessert: \"Tráng miệng\",\n//     };\n//     return translations[category] || category; // Trả về category gốc nếu không có bản dịch\n//   };\n\n//   // Hàm xử lý nhấp để mở rộng/đóng mục menu\n//   const handleToggleExpand = (setId) => {\n//     setExpandedSet(expandedSet === setId ? null : setId); // Toggle trạng thái\n//   };\n\n//   return (\n//     <div className=\"dashboard-section\">\n//       <div className=\"section-header\">\n//         <div className=\"section-title\">\n//           {icon && <span className=\"section-icon\">{icon}</span>}\n//           <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n//         </div>\n//         <button onClick={fetchData} className=\"refresh-button\">\n//           Làm mới Menu\n//         </button>\n//       </div>\n\n//       <div className=\"section-content\">\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <svg\n//               className=\"animate-spin h-8 w-8 text-indigo-600\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//             >\n//               <circle\n//                 className=\"opacity-25\"\n//                 cx=\"12\"\n//                 cy=\"12\"\n//                 r=\"10\"\n//                 stroke=\"currentColor\"\n//                 strokeWidth=\"4\"\n//               ></circle>\n//               <path\n//                 className=\"opacity-75\"\n//                 fill=\"currentColor\"\n//                 d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n//               ></path>\n//             </svg>\n//           </div>\n//         ) : error ? (\n//           <div className=\"error-alert\">\n//             <svg\n//               className=\"w-5 h-5\"\n//               fill=\"currentColor\"\n//               viewBox=\"0 0 20 20\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//             >\n//               <path\n//                 fillRule=\"evenodd\"\n//                 d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n//                 clipRule=\"evenodd\"\n//               ></path>\n//             </svg>\n//             <span>{error}</span>\n//           </div>\n//         ) : menuData.length === 0 ? (\n//           <div className=\"empty-state\">\n//             <p>Không tìm thấy mục menu.</p>\n//           </div>\n//         ) : (\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n//             {menuData.map((set) => (\n//               <div\n//                 key={set.id}\n//                 className=\"dashboard-card card-gradient-indigo\"\n//               >\n//                 <div\n//                   className=\"card-content cursor-pointer\"\n//                   onClick={() => handleToggleExpand(set.id)}\n//                 >\n//                   <div className=\"card-info\">\n//                     <h3>{set.Name}</h3>\n//                     <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n//                     <p className=\"text-sm text-gray-500\">\n//                       {set.Dishes\n//                         ? `${set.Dishes.length} món`\n//                         : \"Không có món nào\"}\n//                     </p>\n//                   </div>\n//                   <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n//                     <img\n//                       src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n//                       alt={set.Name}\n//                       className=\"w-full h-full object-cover\"\n//                       onError={(e) => {\n//                         console.log(`Tải ảnh thất bại: ${e.target.src}`);\n//                         e.target.onerror = null;\n//                         e.target.src = \"/assets/default_set.png\";\n//                       }}\n//                     />\n//                   </div>\n//                 </div>\n//                 {expandedSet === set.id && set.Dishes && set.Dishes.length > 0 && (\n//                   <div className=\"dishes-list p-4 bg-gray-50 border-t border-gray-200\">\n//                     <h4 className=\"text-sm font-medium text-gray-700 mb-2\">\n//                       Danh sách món ăn\n//                     </h4>\n//                     <ul className=\"space-y-2\">\n//                       {set.Dishes.map((dish, index) => (\n//                         <li\n//                           key={index}\n//                           className=\"text-sm text-gray-600 flex justify-between\"\n//                         >\n//                           <span>{dish.Name}</span>\n//                           <span>{translateCategory(dish.Category)}</span>\n//                         </li>\n//                       ))}\n//                     </ul>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MenuManager;\n\n\"use client\";\n\nvar _jsxFileName = \"/home/dhpho/Programming/NCKH/admin-web/src/MenuManager.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from \"react\";\nimport \"./Content.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuManager = ({\n  icon\n}) => {\n  _s();\n  const [menuData, setMenuData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedSet, setExpandedSet] = useState(null); // Trạng thái mở rộng\n\n  // Hàm lấy dữ liệu menu từ API\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Lỗi: ${response.status}`);\n      }\n      const data = await response.json();\n      setMenuData(data.setList || []);\n      setError(null);\n    } catch (err) {\n      console.error(\"Lấy dữ liệu menu thất bại:\", err);\n      setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Lấy dữ liệu khi component được mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Hàm lấy đường dẫn ảnh dựa trên tên set\n  const getImagePath = useMemo(() => {\n    return setName => {\n      console.log(setName);\n      if (setName === \"Hotpot\") {\n        return \"/assets/Buffet_Lau.png\";\n      } else if (setName === \"Seafood Hotpot\") {\n        return \"/assets/Buffet_Lau_Hai_San.png\";\n      } else if (setName === \"BBQ\") {\n        return \"/assets/Buffet_BBQ.png\";\n      } else if (setName.startsWith(\"Sashimi\")) {\n        const formattedName = setName.replace(/\\s+/g, \"_\");\n        console.log(`/assets/Buffet_${formattedName}.png`);\n        return `/assets/Buffet_${formattedName}.png`;\n      } else {\n        const formattedName = setName.replace(/\\s+/g, \"_\");\n        console.log(`/assets/Buffet_${formattedName}.png`);\n        return `/assets/Buffet_${formattedName}.png`;\n      }\n    };\n  }, []);\n\n  // Hàm dịch Category sang tiếng Việt\n  const translateCategory = category => {\n    const translations = {\n      Appetizer: \"Khai vị\",\n      Main: \"Món chính\",\n      Dessert: \"Tráng miệng\"\n    };\n    return translations[category] || category; // Trả về category gốc nếu không có bản dịch\n  };\n\n  // Hàm xử lý nhấp để mở rộng/đóng mục menu\n  const handleToggleExpand = setId => {\n    setExpandedSet(expandedSet === setId ? null : setId); // Toggle trạng thái\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [icon && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-icon\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        className: \"refresh-button\",\n        children: \"L\\xE0m m\\u1EDBi Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"animate-spin h-8 w-8 text-indigo-600\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-5 h-5\",\n          fill: \"currentColor\",\n          viewBox: \"0 0 20 20\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this) : menuData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Kh\\xF4ng t\\xECm th\\u1EA5y m\\u1EE5c menu.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: menuData.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-card card-gradient-indigo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content cursor-pointer hover:bg-gray-50 transition-colors\",\n            onClick: () => handleToggleExpand(set.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: set.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: [\"ID Set: \", set.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: set.Dishes ? `${set.Dishes.length} món` : \"Không có món nào\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-24 h-24 overflow-hidden rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: getImagePath(set.Name) || \"/assets/default_set.png\",\n                alt: set.Name,\n                className: \"w-full h-full object-cover\",\n                onError: e => {\n                  console.log(`Tải ảnh thất bại: ${e.target.src}`);\n                  e.target.onerror = null;\n                  e.target.src = \"/assets/default_set.png\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 17\n          }, this), expandedSet === set.id && set.Dishes && set.Dishes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dishes-list p-4 bg-gray-50 border-t border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-semibold text-gray-800 mb-3\",\n              children: \"Danh s\\xE1ch m\\xF3n \\u0103n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: set.Dishes.map((dish, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dish-item flex items-center justify-between p-3 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium text-gray-700\",\n                  children: dish.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs font-medium px-2 py-1 rounded-full ${dish.Category === \"Appetizer\" ? \"bg-green-100 text-green-800\" : dish.Category === \"Main\" ? \"bg-blue-100 text-blue-800\" : \"bg-pink-100 text-pink-800\"}`,\n                  children: translateCategory(dish.Category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 19\n          }, this)]\n        }, set.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuManager, \"yn7VEhy11ISqP4B7mEyeXFHm7YU=\");\n_c = MenuManager;\nexport default MenuManager;\nvar _c;\n$RefreshReg$(_c, \"MenuManager\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useMemo","jsxDEV","_jsxDEV","MenuManager","icon","menuData","setMenuData","loading","setLoading","error","setError","expandedSet","setExpandedSet","fetchData","response","fetch","method","headers","ok","Error","status","data","json","setList","err","console","getImagePath","setName","log","startsWith","formattedName","replace","translateCategory","category","translations","Appetizer","Main","Dessert","handleToggleExpand","setId","className","children","fileName","lineNumber","columnNumber","onClick","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","fillRule","clipRule","length","map","set","id","Name","Dishes","src","alt","onError","e","target","onerror","dish","index","Category","_c","$RefreshReg$"],"sources":["/home/dhpho/Programming/NCKH/admin-web/src/MenuManager.js"],"sourcesContent":["// // \"use client\";\n\n// // import { useState, useEffect, useMemo } from \"react\";\n// // import \"./Content.css\";\n\n// // const MenuManager = ({ icon }) => {\n// //   const [menuData, setMenuData] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   // Hàm lấy dữ liệu menu từ API\n// //   const fetchData = async () => {\n// //     try {\n// //       setLoading(true);\n// //       const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n// //         method: \"GET\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`Lỗi: ${response.status}`);\n// //       }\n\n// //       const data = await response.json();\n// //       setMenuData(data.setList || []);\n// //       setError(null);\n// //     } catch (err) {\n// //       console.error(\"Lấy dữ liệu menu thất bại:\", err);\n// //       setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   // Lấy dữ liệu khi component được mount\n// //   useEffect(() => {\n// //     fetchData();\n// //   }, []);\n\n// //   // Hàm lấy đường dẫn ảnh dựa trên tên set\n// //   const getImagePath = useMemo(() => {\n// //     return (setName) => {\n// //       console.log(setName);\n// //       if (setName === \"Hotpot\") {\n// //         return \"/assets/Buffet_Lau.png\";\n// //       } else if (setName === \"Seafood Hotpot\") {\n// //         return \"/assets/Buffet_Lau_Hai_San.png\";\n// //       } else if (setName === \"BBQ\") {\n// //         return \"/assets/Buffet_BBQ.png\";\n// //       } else if (setName.startsWith(\"Sashimi\")) {\n// //         const formattedName = setName.replace(/\\s+/g, \"_\");\n// //         console.log(`/assets/Buffet_${formattedName}.png`);\n// //         return `/assets/Buffet_${formattedName}.png`;\n// //       } else {\n// //         const formattedName = setName.replace(/\\s+/g, \"_\");\n// //         console.log(`/assets/Buffet_${formattedName}.png`);\n// //         return `/assets/Buffet_${formattedName}.png`;\n// //       }\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div className=\"dashboard-section\">\n// //       <div className=\"section-header\">\n// //         <div className=\"section-title\">\n// //           {icon && <span className=\"section-icon\">{icon}</span>}\n// //           <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n// //         </div>\n// //         <button onClick={fetchData} className=\"refresh-button\">\n// //           Làm mới Menu\n// //         </button>\n// //       </div>\n\n// //       <div className=\"section-content\">\n// //         {loading ? (\n// //           <div className=\"loading-container\">\n// //             <svg\n// //               className=\"animate-spin h-8 w-8 text-indigo-600\"\n// //               xmlns=\"http://www.w3.org/2000/svg\"\n// //               fill=\"none\"\n// //               viewBox=\"0 0 24 24\"\n// //             >\n// //               <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //               <path\n// //                 className=\"opacity-75\"\n// //                 fill=\"currentColor\"\n// //                 d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n// //               ></path>\n// //             </svg>\n// //           </div>\n// //         ) : error ? (\n// //           <div className=\"error-alert\">\n// //             <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n// //               <path\n// //                 fillRule=\"evenodd\"\n// //                 d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n// //                 clipRule=\"evenodd\"\n// //               ></path>\n// //             </svg>\n// //             <span>{error}</span>\n// //           </div>\n// //         ) : menuData.length === 0 ? (\n// //           <div className=\"empty-state\">\n// //             <p>Không tìm thấy mục menu.</p>\n// //           </div>\n// //         ) : (\n// //           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n// //             {menuData.map((set) => (\n// //               <div key={set.id} className=\"dashboard-card card-gradient-indigo\">\n// //                 <div className=\"card-content\">\n// //                   <div className=\"card-info\">\n// //                     <h3>{set.Name}</h3>\n// //                     <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n// //                     <p className=\"text-sm text-gray-500\">\n// //                       {set.Dishes ? `${set.Dishes.length} món` : \"Không có món nào\"}\n// //                     </p>\n// //                   </div>\n// //                   <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n// //                     <img\n// //                       src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n// //                       alt={set.Name}\n// //                       className=\"w-full h-full object-cover\"\n// //                       onError={(e) => {\n// //                         console.log(`Tải ảnh thất bại: ${e.target.src}`);\n// //                         e.target.onerror = null;\n// //                         e.target.src = \"/assets/default_set.png\";\n// //                       }}\n// //                     />\n// //                   </div>\n// //                 </div>\n// //               </div>\n// //             ))}\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default MenuManager;\n\n// \"use client\";\n\n// import { useState, useEffect, useMemo } from \"react\";\n// import \"./Content.css\";\n\n// const MenuManager = ({ icon }) => {\n//   const [menuData, setMenuData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [expandedSet, setExpandedSet] = useState(null); // Trạng thái mở rộng\n\n//   // Hàm lấy dữ liệu menu từ API\n//   const fetchData = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Lỗi: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setMenuData(data.setList || []);\n//       setError(null);\n//     } catch (err) {\n//       console.error(\"Lấy dữ liệu menu thất bại:\", err);\n//       setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Lấy dữ liệu khi component được mount\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   // Hàm lấy đường dẫn ảnh dựa trên tên set\n//   const getImagePath = useMemo(() => {\n//     return (setName) => {\n//       console.log(setName);\n//       if (setName === \"Hotpot\") {\n//         return \"/assets/Buffet_Lau.png\";\n//       } else if (setName === \"Seafood Hotpot\") {\n//         return \"/assets/Buffet_Lau_Hai_San.png\";\n//       } else if (setName === \"BBQ\") {\n//         return \"/assets/Buffet_BBQ.png\";\n//       } else if (setName.startsWith(\"Sashimi\")) {\n//         const formattedName = setName.replace(/\\s+/g, \"_\");\n//         console.log(`/assets/Buffet_${formattedName}.png`);\n//         return `/assets/Buffet_${formattedName}.png`;\n//       } else {\n//         const formattedName = setName.replace(/\\s+/g, \"_\");\n//         console.log(`/assets/Buffet_${formattedName}.png`);\n//         return `/assets/Buffet_${formattedName}.png`;\n//       }\n//     };\n//   }, []);\n\n//   // Hàm dịch Category sang tiếng Việt\n//   const translateCategory = (category) => {\n//     const translations = {\n//       Appetizer: \"Khai vị\",\n//       Main: \"Món chính\",\n//       Dessert: \"Tráng miệng\",\n//     };\n//     return translations[category] || category; // Trả về category gốc nếu không có bản dịch\n//   };\n\n//   // Hàm xử lý nhấp để mở rộng/đóng mục menu\n//   const handleToggleExpand = (setId) => {\n//     setExpandedSet(expandedSet === setId ? null : setId); // Toggle trạng thái\n//   };\n\n//   return (\n//     <div className=\"dashboard-section\">\n//       <div className=\"section-header\">\n//         <div className=\"section-title\">\n//           {icon && <span className=\"section-icon\">{icon}</span>}\n//           <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n//         </div>\n//         <button onClick={fetchData} className=\"refresh-button\">\n//           Làm mới Menu\n//         </button>\n//       </div>\n\n//       <div className=\"section-content\">\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <svg\n//               className=\"animate-spin h-8 w-8 text-indigo-600\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//             >\n//               <circle\n//                 className=\"opacity-25\"\n//                 cx=\"12\"\n//                 cy=\"12\"\n//                 r=\"10\"\n//                 stroke=\"currentColor\"\n//                 strokeWidth=\"4\"\n//               ></circle>\n//               <path\n//                 className=\"opacity-75\"\n//                 fill=\"currentColor\"\n//                 d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n//               ></path>\n//             </svg>\n//           </div>\n//         ) : error ? (\n//           <div className=\"error-alert\">\n//             <svg\n//               className=\"w-5 h-5\"\n//               fill=\"currentColor\"\n//               viewBox=\"0 0 20 20\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//             >\n//               <path\n//                 fillRule=\"evenodd\"\n//                 d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n//                 clipRule=\"evenodd\"\n//               ></path>\n//             </svg>\n//             <span>{error}</span>\n//           </div>\n//         ) : menuData.length === 0 ? (\n//           <div className=\"empty-state\">\n//             <p>Không tìm thấy mục menu.</p>\n//           </div>\n//         ) : (\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n//             {menuData.map((set) => (\n//               <div\n//                 key={set.id}\n//                 className=\"dashboard-card card-gradient-indigo\"\n//               >\n//                 <div\n//                   className=\"card-content cursor-pointer\"\n//                   onClick={() => handleToggleExpand(set.id)}\n//                 >\n//                   <div className=\"card-info\">\n//                     <h3>{set.Name}</h3>\n//                     <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n//                     <p className=\"text-sm text-gray-500\">\n//                       {set.Dishes\n//                         ? `${set.Dishes.length} món`\n//                         : \"Không có món nào\"}\n//                     </p>\n//                   </div>\n//                   <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n//                     <img\n//                       src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n//                       alt={set.Name}\n//                       className=\"w-full h-full object-cover\"\n//                       onError={(e) => {\n//                         console.log(`Tải ảnh thất bại: ${e.target.src}`);\n//                         e.target.onerror = null;\n//                         e.target.src = \"/assets/default_set.png\";\n//                       }}\n//                     />\n//                   </div>\n//                 </div>\n//                 {expandedSet === set.id && set.Dishes && set.Dishes.length > 0 && (\n//                   <div className=\"dishes-list p-4 bg-gray-50 border-t border-gray-200\">\n//                     <h4 className=\"text-sm font-medium text-gray-700 mb-2\">\n//                       Danh sách món ăn\n//                     </h4>\n//                     <ul className=\"space-y-2\">\n//                       {set.Dishes.map((dish, index) => (\n//                         <li\n//                           key={index}\n//                           className=\"text-sm text-gray-600 flex justify-between\"\n//                         >\n//                           <span>{dish.Name}</span>\n//                           <span>{translateCategory(dish.Category)}</span>\n//                         </li>\n//                       ))}\n//                     </ul>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MenuManager;\n\n\"use client\";\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport \"./Content.css\";\n\nconst MenuManager = ({ icon }) => {\n  const [menuData, setMenuData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedSet, setExpandedSet] = useState(null); // Trạng thái mở rộng\n\n  // Hàm lấy dữ liệu menu từ API\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Lỗi: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setMenuData(data.setList || []);\n      setError(null);\n    } catch (err) {\n      console.error(\"Lấy dữ liệu menu thất bại:\", err);\n      setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Lấy dữ liệu khi component được mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Hàm lấy đường dẫn ảnh dựa trên tên set\n  const getImagePath = useMemo(() => {\n    return (setName) => {\n      console.log(setName);\n      if (setName === \"Hotpot\") {\n        return \"/assets/Buffet_Lau.png\";\n      } else if (setName === \"Seafood Hotpot\") {\n        return \"/assets/Buffet_Lau_Hai_San.png\";\n      } else if (setName === \"BBQ\") {\n        return \"/assets/Buffet_BBQ.png\";\n      } else if (setName.startsWith(\"Sashimi\")) {\n        const formattedName = setName.replace(/\\s+/g, \"_\");\n        console.log(`/assets/Buffet_${formattedName}.png`);\n        return `/assets/Buffet_${formattedName}.png`;\n      } else {\n        const formattedName = setName.replace(/\\s+/g, \"_\");\n        console.log(`/assets/Buffet_${formattedName}.png`);\n        return `/assets/Buffet_${formattedName}.png`;\n      }\n    };\n  }, []);\n\n  // Hàm dịch Category sang tiếng Việt\n  const translateCategory = (category) => {\n    const translations = {\n      Appetizer: \"Khai vị\",\n      Main: \"Món chính\",\n      Dessert: \"Tráng miệng\",\n    };\n    return translations[category] || category; // Trả về category gốc nếu không có bản dịch\n  };\n\n  // Hàm xử lý nhấp để mở rộng/đóng mục menu\n  const handleToggleExpand = (setId) => {\n    setExpandedSet(expandedSet === setId ? null : setId); // Toggle trạng thái\n  };\n\n  return (\n    <div className=\"dashboard-section\">\n      <div className=\"section-header\">\n        <div className=\"section-title\">\n          {icon && <span className=\"section-icon\">{icon}</span>}\n          <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n        </div>\n        <button onClick={fetchData} className=\"refresh-button\">\n          Làm mới Menu\n        </button>\n      </div>\n\n      <div className=\"section-content\">\n        {loading ? (\n          <div className=\"loading-container\">\n            <svg\n              className=\"animate-spin h-8 w-8 text-indigo-600\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle\n                className=\"opacity-25\"\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                stroke=\"currentColor\"\n                strokeWidth=\"4\"\n              ></circle>\n              <path\n                className=\"opacity-75\"\n                fill=\"currentColor\"\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n              ></path>\n            </svg>\n          </div>\n        ) : error ? (\n          <div className=\"error-alert\">\n            <svg\n              className=\"w-5 h-5\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n                clipRule=\"evenodd\"\n              ></path>\n            </svg>\n            <span>{error}</span>\n          </div>\n        ) : menuData.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>Không tìm thấy mục menu.</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {menuData.map((set) => (\n              <div\n                key={set.id}\n                className=\"dashboard-card card-gradient-indigo\"\n              >\n                <div\n                  className=\"card-content cursor-pointer hover:bg-gray-50 transition-colors\"\n                  onClick={() => handleToggleExpand(set.id)}\n                >\n                  <div className=\"card-info\">\n                    <h3 className=\"text-lg font-semibold text-gray-800\">{set.Name}</h3>\n                    <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n                    <p className=\"text-sm text-gray-500\">\n                      {set.Dishes\n                        ? `${set.Dishes.length} món`\n                        : \"Không có món nào\"}\n                    </p>\n                  </div>\n                  <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n                    <img\n                      src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n                      alt={set.Name}\n                      className=\"w-full h-full object-cover\"\n                      onError={(e) => {\n                        console.log(`Tải ảnh thất bại: ${e.target.src}`);\n                        e.target.onerror = null;\n                        e.target.src = \"/assets/default_set.png\";\n                      }}\n                    />\n                  </div>\n                </div>\n                {expandedSet === set.id && set.Dishes && set.Dishes.length > 0 && (\n                  <div className=\"dishes-list p-4 bg-gray-50 border-t border-gray-200\">\n                    <h4 className=\"text-sm font-semibold text-gray-800 mb-3\">\n                      Danh sách món ăn\n                    </h4>\n                    <div className=\"space-y-3\">\n                      {set.Dishes.map((dish, index) => (\n                        <div\n                          key={index}\n                          className=\"dish-item flex items-center justify-between p-3 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow\"\n                        >\n                          <span className=\"text-sm font-medium text-gray-700\">\n                            {dish.Name}\n                          </span>\n                          <span\n                            className={`text-xs font-medium px-2 py-1 rounded-full ${\n                              dish.Category === \"Appetizer\"\n                                ? \"bg-green-100 text-green-800\"\n                                : dish.Category === \"Main\"\n                                ? \"bg-blue-100 text-blue-800\"\n                                : \"bg-pink-100 text-pink-800\"\n                            }`}\n                          >\n                            {translateCategory(dish.Category)}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MenuManager;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}