{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/dhpho/Programming/NCKH/admin-web/src/CallStaffNotification.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./CallStaffNotification.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallStaffNotification = () => {\n  _s();\n  const [callStaffs, setCallStaffs] = useState([]);\n  const [isVisible, setIsVisible] = useState(true);\n\n  // Hàm để lấy dữ liệu từ API\n  const fetchCallStaffs = async () => {\n    try {\n      const response = await fetch(\"http://localhost/api/users/get-call-staffs\");\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Dữ liệu nhận được:\", data); // Thêm log để kiểm tra\n        setCallStaffs(data);\n      } else {\n        console.error(\"Lỗi khi lấy dữ liệu:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi gọi API:\", error);\n    }\n  };\n\n  // Hàm để cập nhật trạng thái của một callStaff\n  const updateCallStaff = async callStaffId => {\n    try {\n      const response = await fetch(\"http://localhost/api/users/update-call-staff\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          callStaffId\n        })\n      });\n      if (response.ok) {\n        // Cập nhật lại danh sách sau khi cập nhật thành công\n        setCallStaffs(callStaffs.filter(staff => staff.CallStaffID !== callStaffId));\n      } else {\n        console.error(\"Lỗi khi cập nhật:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi gọi API cập nhật:\", error);\n    }\n  };\n\n  // Sử dụng useEffect để gọi API định kỳ\n  useEffect(() => {\n    // Gọi lần đầu khi component được mount\n    fetchCallStaffs();\n\n    // Thiết lập interval để gọi API mỗi 10 giây\n    const intervalId = setInterval(fetchCallStaffs, 10000);\n\n    // Dọn dẹp interval khi component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Nếu không có callStaffs nào, không hiển thị gì cả\n  if (callStaffs.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"call-staff-notification\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Th\\xF4ng b\\xE1o g\\u1ECDi nh\\xE2n vi\\xEAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: () => setIsVisible(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-content\",\n      children: callStaffs.map(staff => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"B\\xE0n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), \" \", staff.TableID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tr\\u1EA1ng th\\xE1i:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), \" \", staff.Status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Th\\u1EDDi gian:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), \" \", new Date(staff.CreatedAt).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"complete-button\",\n          onClick: () => updateCallStaff(staff.CallStaffID),\n          children: \"\\u0110\\xE3 x\\u1EED l\\xFD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, staff.CallStaffID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CallStaffNotification, \"a7CjGFIhqeSfCKze+9MR6Ont0Gc=\");\n_c = CallStaffNotification;\nexport default CallStaffNotification;\nvar _c;\n$RefreshReg$(_c, \"CallStaffNotification\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","jsxDEV","_jsxDEV","CallStaffNotification","callStaffs","setCallStaffs","isVisible","setIsVisible","fetchCallStaffs","response","fetch","ok","data","json","console","log","error","statusText","updateCallStaff","callStaffId","method","headers","body","JSON","stringify","filter","staff","CallStaffID","intervalId","setInterval","clearInterval","length","className","children","fileName","lineNumber","columnNumber","onClick","map","TableID","Status","Date","CreatedAt","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/home/dhpho/Programming/NCKH/admin-web/src/CallStaffNotification.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport \"./CallStaffNotification.css\"\n\nconst CallStaffNotification = () => {\n  const [callStaffs, setCallStaffs] = useState([])\n  const [isVisible, setIsVisible] = useState(true)\n\n  // Hàm để lấy dữ liệu từ API\n  const fetchCallStaffs = async () => {\n    try {\n      const response = await fetch(\"http://localhost/api/users/get-call-staffs\")\n      if (response.ok) {\n        const data = await response.json()\n        console.log(\"Dữ liệu nhận được:\", data) // Thêm log để kiểm tra\n        setCallStaffs(data)\n      } else {\n        console.error(\"Lỗi khi lấy dữ liệu:\", response.statusText)\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi gọi API:\", error)\n    }\n  }\n\n  // Hàm để cập nhật trạng thái của một callStaff\n  const updateCallStaff = async (callStaffId) => {\n    try {\n      const response = await fetch(\"http://localhost/api/users/update-call-staff\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ callStaffId }),\n      })\n\n      if (response.ok) {\n        // Cập nhật lại danh sách sau khi cập nhật thành công\n        setCallStaffs(callStaffs.filter((staff) => staff.CallStaffID !== callStaffId))\n      } else {\n        console.error(\"Lỗi khi cập nhật:\", response.statusText)\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi gọi API cập nhật:\", error)\n    }\n  }\n\n  // Sử dụng useEffect để gọi API định kỳ\n  useEffect(() => {\n    // Gọi lần đầu khi component được mount\n    fetchCallStaffs()\n\n    // Thiết lập interval để gọi API mỗi 10 giây\n    const intervalId = setInterval(fetchCallStaffs, 10000)\n\n    // Dọn dẹp interval khi component unmount\n    return () => clearInterval(intervalId)\n  }, [])\n\n  // Nếu không có callStaffs nào, không hiển thị gì cả\n  if (callStaffs.length === 0) {\n    return null\n  }\n\n  return (\n    <div className=\"call-staff-notification\">\n      <div className=\"notification-header\">\n        <h3>Thông báo gọi nhân viên</h3>\n        <button className=\"close-button\" onClick={() => setIsVisible(false)}>\n          ×\n        </button>\n      </div>\n      <div className=\"notification-content\">\n        {callStaffs.map((staff) => (\n          <div key={staff.CallStaffID} className=\"notification-item\">\n            <div className=\"notification-info\">\n              <p>\n                <strong>Bàn:</strong> {staff.TableID}\n              </p>\n              <p>\n                <strong>Trạng thái:</strong> {staff.Status}\n              </p>\n              <p>\n                <strong>Thời gian:</strong> {new Date(staff.CreatedAt).toLocaleTimeString()}\n              </p>\n            </div>\n            <button className=\"complete-button\" onClick={() => updateCallStaff(staff.CallStaffID)}>\n              Đã xử lý\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default CallStaffNotification\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAN,EAAA;EAClC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC1E,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC,EAAC;QACxCP,aAAa,CAACO,IAAI,CAAC;MACrB,CAAC,MAAM;QACLE,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEP,QAAQ,CAACQ,UAAU,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;;EAED;EACA,MAAME,eAAe,GAAG,MAAOC,WAAW,IAAK;IAC7C,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEL;QAAY,CAAC;MACtC,CAAC,CAAC;MAEF,IAAIV,QAAQ,CAACE,EAAE,EAAE;QACf;QACAN,aAAa,CAACD,UAAU,CAACqB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,WAAW,KAAKR,WAAW,CAAC,CAAC;MAChF,CAAC,MAAM;QACLL,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEP,QAAQ,CAACQ,UAAU,CAAC;MACzD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd;IACAQ,eAAe,CAAC,CAAC;;IAEjB;IACA,MAAMoB,UAAU,GAAGC,WAAW,CAACrB,eAAe,EAAE,KAAK,CAAC;;IAEtD;IACA,OAAO,MAAMsB,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIxB,UAAU,CAAC2B,MAAM,KAAK,CAAC,EAAE;IAC3B,OAAO,IAAI;EACb;EAEA,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtC/B,OAAA;MAAK8B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC/B,OAAA;QAAA+B,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAtC,YAAA;QAAAuC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChClC,OAAA;QAAQ8B,SAAS,EAAC,cAAc;QAACK,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,KAAK,CAAE;QAAA0B,QAAA,EAAC;MAErE;QAAAC,QAAA,EAAAtC,YAAA;QAAAuC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAF,QAAA,EAAAtC,YAAA;MAAAuC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlC,OAAA;MAAK8B,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAClC7B,UAAU,CAACkC,GAAG,CAAEZ,KAAK,iBACpBxB,OAAA;QAA6B8B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBACxD/B,OAAA;UAAK8B,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC/B,OAAA;YAAA+B,QAAA,gBACE/B,OAAA;cAAA+B,QAAA,EAAQ;YAAI;cAAAC,QAAA,EAAAtC,YAAA;cAAAuC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACV,KAAK,CAACa,OAAO;UAAA;YAAAL,QAAA,EAAAtC,YAAA;YAAAuC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,eACJlC,OAAA;YAAA+B,QAAA,gBACE/B,OAAA;cAAA+B,QAAA,EAAQ;YAAW;cAAAC,QAAA,EAAAtC,YAAA;cAAAuC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACV,KAAK,CAACc,MAAM;UAAA;YAAAN,QAAA,EAAAtC,YAAA;YAAAuC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACJlC,OAAA;YAAA+B,QAAA,gBACE/B,OAAA;cAAA+B,QAAA,EAAQ;YAAU;cAAAC,QAAA,EAAAtC,YAAA;cAAAuC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC,IAAIK,IAAI,CAACf,KAAK,CAACgB,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;UAAA;YAAAT,QAAA,EAAAtC,YAAA;YAAAuC,UAAA;YAAAC,YAAA;UAAA,OAC1E,CAAC;QAAA;UAAAF,QAAA,EAAAtC,YAAA;UAAAuC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNlC,OAAA;UAAQ8B,SAAS,EAAC,iBAAiB;UAACK,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACQ,KAAK,CAACC,WAAW,CAAE;UAAAM,QAAA,EAAC;QAEvF;UAAAC,QAAA,EAAAtC,YAAA;UAAAuC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAdDV,KAAK,CAACC,WAAW;QAAAO,QAAA,EAAAtC,YAAA;QAAAuC,UAAA;QAAAC,YAAA;MAAA,OAetB,CACN;IAAC;MAAAF,QAAA,EAAAtC,YAAA;MAAAuC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAF,QAAA,EAAAtC,YAAA;IAAAuC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAvC,EAAA,CAzFKM,qBAAqB;AAAAyC,EAAA,GAArBzC,qBAAqB;AA2F3B,eAAeA,qBAAqB;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}