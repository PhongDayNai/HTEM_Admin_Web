{"ast":null,"code":"// // \"use client\"\n\n// // import { useState, useEffect } from \"react\"\n// // import { CreditCard, Search, Loader2, AlertCircle } from \"lucide-react\"\n// // import \"./Content.css\"\n// // import DashboardSection from \"./Dashboard/DashboardSection\"\n\n// // const PaymentSection = () => {\n// //   const [payments, setPayments] = useState([])\n// //   const [loading, setLoading] = useState(true)\n// //   const [error, setError] = useState(null)\n// //   const [searchTerm, setSearchTerm] = useState(\"\")\n\n// //   const loadPayments = async () => {\n// //     try {\n// //       setLoading(true)\n// //       const response = await fetch(\"http://localhost:8080/api/payments\", {\n// //         method: \"GET\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       })\n\n// //       if (!response.ok) {\n// //         throw new Error(\"Failed to fetch payments\")\n// //       }\n\n// //       const data = await response.json()\n// //       setPayments(data)\n// //       setError(null)\n// //     } catch (err) {\n// //       console.error(\"Error loading payments:\", err)\n// //       setError(\"Failed to load payments. Please try again later.\")\n// //     } finally {\n// //       setLoading(false)\n// //     }\n// //   }\n\n// //   useEffect(() => {\n// //     loadPayments()\n// //   }, [])\n\n// //   // Filter payments based on search term\n// //   const filteredPayments = payments.filter(\n// //     (payment) => payment.OrderID?.toString().includes(searchTerm) || payment.TableID?.toString().includes(searchTerm),\n// //   )\n\n// //   // Format currency\n// //   const formatCurrency = (amount) => {\n// //     return new Intl.NumberFormat(\"vi-VN\", {\n// //       style: \"currency\",\n// //       currency: \"VND\",\n// //     }).format(amount)\n// //   }\n\n// //   // Format date\n// //   const formatDate = (dateString) => {\n// //     const date = new Date(dateString)\n// //     return new Intl.DateTimeFormat(\"vi-VN\", {\n// //       year: \"numeric\",\n// //       month: \"2-digit\",\n// //       day: \"2-digit\",\n// //       hour: \"2-digit\",\n// //       minute: \"2-digit\",\n// //     }).format(date)\n// //   }\n\n// //   return (\n// //     <div className=\"space-y-6\">\n// //       <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n// //         {error && (\n// //           <div className=\"error-alert\">\n// //             <AlertCircle className=\"h-5 w-5\" />\n// //             {error}\n// //           </div>\n// //         )}\n\n// //         <div className=\"order-search-container\">\n// //           <Search className=\"order-search-icon h-4 w-4\" />\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Tìm kiếm theo mã đơn hàng hoặc bàn...\"\n// //             className=\"order-search-input\"\n// //             value={searchTerm}\n// //             onChange={(e) => setSearchTerm(e.target.value)}\n// //           />\n// //           <button onClick={loadPayments} className=\"refresh-button\">\n// //             Làm mới\n// //           </button>\n// //         </div>\n\n// //         {loading ? (\n// //           <div className=\"loading-container\">\n// //             <Loader2 className=\"h-8 w-8 loading-spinner\" />\n// //             <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n// //           </div>\n// //         ) : (\n// //           <>\n// //             {filteredPayments.length === 0 ? (\n// //               <div className=\"empty-state\">\n// //                 <p>Không tìm thấy dữ liệu thanh toán.</p>\n// //               </div>\n// //             ) : (\n// //               <div className=\"overflow-x-auto w-full\">\n// //                 <table className=\"orders-table\">\n// //                   <thead>\n// //                     <tr>\n// //                       <th>Mã thanh toán</th>\n// //                       <th>Mã đơn hàng</th>\n// //                       <th>Bàn</th>\n// //                       <th>Tổng tiền</th>\n// //                       <th>Ngày thanh toán</th>\n// //                       <th>Trạng thái</th>\n// //                     </tr>\n// //                   </thead>\n// //                   <tbody>\n// //                     {filteredPayments.map((payment) => (\n// //                       <tr key={payment.PaymentID}>\n// //                         <td>{payment.PaymentID}</td>\n// //                         <td>{payment.OrderID}</td>\n// //                         <td>{payment.TableID}</td>\n// //                         <td className=\"font-medium\">{formatCurrency(payment.Amount)}</td>\n// //                         <td>{formatDate(payment.PaymentDate)}</td>\n// //                         <td>\n// //                           <span\n// //                             className={`order-status ${\n// //                               payment.Status === \"Completed\"\n// //                                 ? \"status-completed\"\n// //                                 : payment.Status === \"Pending\"\n// //                                   ? \"status-pending\"\n// //                                   : \"status-progress\"\n// //                             }`}\n// //                           >\n// //                             {payment.Status === \"Completed\"\n// //                               ? \"Hoàn thành\"\n// //                               : payment.Status === \"Pending\"\n// //                                 ? \"Chờ xử lý\"\n// //                                 : \"Đang xử lý\"}\n// //                           </span>\n// //                         </td>\n// //                       </tr>\n// //                     ))}\n// //                   </tbody>\n// //                 </table>\n// //               </div>\n// //             )}\n// //           </>\n// //         )}\n// //       </DashboardSection>\n// //     </div>\n// //   )\n// // }\n\n// // export default PaymentSection\n\n// \"use client\"\n\n// import { useEffect, useState } from \"react\"\n// import { Loader2, AlertCircle, CreditCard, Search, CheckCircle } from \"lucide-react\"\n// import \"./Content.css\"\n// import DashboardSection from \"./Dashboard/DashboardSection\"\n\n// const PaymentSection = () => {\n//   const [payments, setPayments] = useState([])\n//   const [loading, setLoading] = useState(true)\n//   const [error, setError] = useState(null)\n//   const [searchTerm, setSearchTerm] = useState(\"\")\n//   const [dialogOpen, setDialogOpen] = useState(false)\n//   const [selectedPayment, setSelectedPayment] = useState(null)\n//   const [pointsToUse, setPointsToUse] = useState(0)\n\n//   const fetchPayments = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/payments/all\")\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch payments\")\n//       }\n//       const data = await response.json()\n//       setPayments(data.payments || [])\n//       setError(null)\n//     } catch (err) {\n//       console.error(\"Error fetching payments:\", err)\n//       setError(\"Failed to load payments. Please try again later.\")\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   useEffect(() => {\n//     fetchPayments()\n\n//     // Set up interval to fetch data every second\n//     const intervalId = setInterval(() => {\n//       fetchPayments()\n//     }, 1000)\n\n//     // Clean up interval on component unmount\n//     return () => clearInterval(intervalId)\n//   }, [])\n\n//   const handlePaymentClick = (payment) => {\n//     if (payment.UserID !== -1) {\n//       // Open dialog for registered user\n//       setSelectedPayment(payment)\n//       setPointsToUse(0)\n//       setDialogOpen(true)\n//     } else {\n//       // Handle guest payment directly\n//       handleGuestPayment(payment)\n//     }\n//   }\n\n//   const handleGuestPayment = async (payment) => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/payments/handleGuess\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           orderId: payment.OrderID,\n//           amount: payment.TotalPrice,\n//           paymentMethod: \"cash\",\n//         }),\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to process payment\")\n//       }\n\n//       // Refresh payments after successful payment\n//       fetchPayments()\n//     } catch (err) {\n//       console.error(\"Error processing guest payment:\", err)\n//       setError(\"Failed to process payment. Please try again.\")\n//     }\n//   }\n\n//   const handleUserPayment = async () => {\n//     if (!selectedPayment) return\n\n//     try {\n//       // Calculate new amount after points deduction\n//       const pointsValue = pointsToUse * 1000\n//       const newAmount = Math.max(0, selectedPayment.TotalPrice - pointsValue)\n\n//       const response = await fetch(\"http://localhost:8080/api/payments/handleUser\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           userId: selectedPayment.UserID,\n//           orderId: selectedPayment.OrderID,\n//           usingPoints: pointsToUse > 0 ? 1 : 0,\n//           pointsUsedNumber: pointsToUse,\n//           amount: newAmount,\n//           paymentMethod: \"cash\",\n//         }),\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to process payment\")\n//       }\n\n//       // Close dialog and refresh payments\n//       setDialogOpen(false)\n//       fetchPayments()\n//     } catch (err) {\n//       console.error(\"Error processing user payment:\", err)\n//       setError(\"Failed to process payment. Please try again.\")\n//     }\n//   }\n\n//   // Format date to a more readable format\n//   const formatDate = (dateString) => {\n//     const date = new Date(dateString)\n//     return date.toLocaleString(\"vi-VN\", {\n//       year: \"numeric\",\n//       month: \"2-digit\",\n//       day: \"2-digit\",\n//       hour: \"2-digit\",\n//       minute: \"2-digit\",\n//     })\n//   }\n\n//   // Format currency\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat(\"vi-VN\", {\n//       style: \"currency\",\n//       currency: \"VND\",\n//     }).format(amount)\n//   }\n\n//   // Filter payments based on search term\n//   const filteredPayments = payments.filter(\n//     (payment) =>\n//       payment.UserName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//       payment.TableID?.toString().includes(searchTerm),\n//   )\n\n//   // Separate paid and unpaid payments\n//   const unpaidPayments = filteredPayments.filter((payment) => payment.TotalPrice === 0)\n//   const paidPayments = filteredPayments.filter((payment) => payment.TotalPrice > 0)\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n//         {error && (\n//           <div className=\"error-alert\">\n//             <AlertCircle className=\"h-5 w-5\" />\n//             {error}\n//           </div>\n//         )}\n\n//         <div className=\"order-search-container\">\n//           <Search className=\"order-search-icon h-4 w-4\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Tìm kiếm theo tên hoặc bàn...\"\n//             className=\"order-search-input\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//           />\n//         </div>\n\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <Loader2 className=\"h-8 w-8 loading-spinner\" />\n//             <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n//           </div>\n//         ) : (\n//           <>\n//             {/* Unpaid Payments Section */}\n//             <div className=\"mb-8\">\n//               <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Chưa thanh toán</h3>\n//               {unpaidPayments.length === 0 ? (\n//                 <div className=\"empty-state\">\n//                   <p>Không có đơn hàng chưa thanh toán.</p>\n//                 </div>\n//               ) : (\n//                 <div className=\"overflow-x-auto w-full\">\n//                   <table className=\"orders-table\">\n//                     <thead>\n//                       <tr>\n//                         <th>Mã đơn</th>\n//                         <th>Bàn</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Khách hàng</th>\n//                         <th>Thao tác</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {unpaidPayments.map((payment) => (\n//                         <tr key={payment.PaymentID}>\n//                           <td>{payment.OrderID}</td>\n//                           <td>{payment.TableID}</td>\n//                           <td>{formatDate(payment.OrderDate)}</td>\n//                           <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n//                           <td>\n//                             <button onClick={() => handlePaymentClick(payment)} className=\"serve-button\">\n//                               <CheckCircle className=\"h-4 w-4 mr-1\" />\n//                               Thanh toán\n//                             </button>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               )}\n//             </div>\n\n//             {/* Paid Payments Section */}\n//             <div>\n//               <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Đã thanh toán</h3>\n//               {paidPayments.length === 0 ? (\n//                 <div className=\"empty-state\">\n//                   <p>Không có đơn hàng đã thanh toán.</p>\n//                 </div>\n//               ) : (\n//                 <div className=\"overflow-x-auto w-full\">\n//                   <table className=\"orders-table\">\n//                     <thead>\n//                       <tr>\n//                         <th>Mã đơn</th>\n//                         <th>Bàn</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Khách hàng</th>\n//                         <th>Tổng tiền</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {paidPayments.map((payment) => (\n//                         <tr key={payment.PaymentID}>\n//                           <td>{payment.OrderID}</td>\n//                           <td>{payment.TableID}</td>\n//                           <td>{formatDate(payment.OrderDate)}</td>\n//                           <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n//                           <td className=\"font-medium text-green-600\">{formatCurrency(payment.TotalPrice)}</td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               )}\n//             </div>\n//           </>\n//         )}\n//       </DashboardSection>\n\n//       {/* Points Dialog */}\n//       {dialogOpen && selectedPayment && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n//           <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n//             <h3 className=\"text-lg font-semibold mb-4\">Sử dụng điểm tích lũy</h3>\n\n//             <div className=\"mb-4\">\n//               <p className=\"text-sm text-gray-600 mb-1\">Khách hàng: {selectedPayment.UserName}</p>\n//               <p className=\"text-sm text-gray-600 mb-1\">Điểm hiện có: {selectedPayment.Points} điểm</p>\n//               <p className=\"text-sm text-gray-600 mb-3\">\n//                 Giá trị đơn hàng: {formatCurrency(selectedPayment.TotalPrice)}\n//               </p>\n\n//               <div className=\"mt-4\">\n//                 <label htmlFor=\"pointsInput\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                   Nhập số điểm muốn sử dụng:\n//                 </label>\n//                 <input\n//                   id=\"pointsInput\"\n//                   type=\"number\"\n//                   min=\"0\"\n//                   max={Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))}\n//                   value={pointsToUse}\n//                   onChange={(e) => setPointsToUse(Number.parseInt(e.target.value) || 0)}\n//                   className=\"form-input w-full\"\n//                 />\n//                 <p className=\"text-xs text-gray-500 mt-1\">\n//                   1 điểm = 1.000đ (Tối đa:{\" \"}\n//                   {Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))} điểm)\n//                 </p>\n//               </div>\n\n//               <div className=\"mt-4 p-3 bg-gray-50 rounded-md\">\n//                 <p className=\"text-sm font-medium\">Tổng thanh toán sau khi sử dụng điểm:</p>\n//                 <p className=\"text-lg font-bold text-green-600\">\n//                   {formatCurrency(Math.max(0, selectedPayment.TotalPrice - pointsToUse * 1000))}\n//                 </p>\n//               </div>\n//             </div>\n\n//             <div className=\"flex justify-end space-x-3 mt-6\">\n//               <button\n//                 onClick={() => setDialogOpen(false)}\n//                 className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n//               >\n//                 Hủy\n//               </button>\n//               <button\n//                 onClick={handleUserPayment}\n//                 className=\"px-4 py-2 bg-indigo-600 rounded-md text-sm font-medium text-white hover:bg-indigo-700\"\n//               >\n//                 Xác nhận thanh toán\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default PaymentSection\n\n\"use client\";\n\nvar _jsxFileName = \"/home/dhpho/Programming/NCKH/admin-web/src/PaymentSection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Loader2, AlertCircle, CreditCard, Search, CheckCircle } from \"lucide-react\";\nimport \"./Content.css\";\nimport DashboardSection from \"./Dashboard/DashboardSection\";\n\n// Thêm CSS cho hiệu ứng modal\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modalStyles = `\n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n  \n  @keyframes slideIn {\n    from { transform: translateY(-10px); opacity: 0; }\n    to { transform: translateY(0); opacity: 1; }\n  }\n  \n  .modal-overlay {\n    animation: fadeIn 0.3s ease-out;\n  }\n  \n  .modal-content {\n    animation: slideIn 0.3s ease-out;\n  }\n`;\nconst PaymentSection = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [selectedPayment, setSelectedPayment] = useState(null);\n  const [pointsToUse, setPointsToUse] = useState(0);\n  const fetchPayments = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/payments/all\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch payments\");\n      }\n      const data = await response.json();\n      setPayments(data.payments || []);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching payments:\", err);\n      setError(\"Failed to load payments. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPayments();\n\n    // Set up interval to fetch data every second\n    const intervalId = setInterval(() => {\n      fetchPayments();\n    }, 1000);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  const handlePaymentClick = payment => {\n    if (payment.UserID !== -1) {\n      // Open dialog for registered user\n      setSelectedPayment(payment);\n      setPointsToUse(0);\n      setDialogOpen(true);\n    } else {\n      // Handle guest payment directly\n      handleGuestPayment(payment);\n    }\n  };\n  const handleGuestPayment = async payment => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/payments/handleGuess\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          orderId: payment.OrderID,\n          amount: payment.TotalPrice,\n          paymentMethod: \"cash\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to process payment\");\n      }\n\n      // Refresh payments after successful payment\n      fetchPayments();\n    } catch (err) {\n      console.error(\"Error processing guest payment:\", err);\n      setError(\"Failed to process payment. Please try again.\");\n    }\n  };\n  const handleUserPayment = async () => {\n    if (!selectedPayment) return;\n    try {\n      // Calculate new amount after points deduction\n      const pointsValue = pointsToUse * 1000;\n      const newAmount = Math.max(0, selectedPayment.TotalPrice - pointsValue);\n      const response = await fetch(\"http://localhost:8080/api/payments/handleUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: selectedPayment.UserID,\n          orderId: selectedPayment.OrderID,\n          usingPoints: pointsToUse > 0 ? 1 : 0,\n          pointsUsedNumber: pointsToUse,\n          amount: newAmount,\n          paymentMethod: \"cash\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to process payment\");\n      }\n\n      // Close dialog and refresh payments\n      setDialogOpen(false);\n      fetchPayments();\n    } catch (err) {\n      console.error(\"Error processing user payment:\", err);\n      setError(\"Failed to process payment. Please try again.\");\n    }\n  };\n\n  // Format date to a more readable format\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString(\"vi-VN\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n\n  // Format currency\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\"\n    }).format(amount);\n  };\n\n  // Filter payments based on search term\n  const filteredPayments = payments.filter(payment => {\n    var _payment$UserName, _payment$TableID;\n    return ((_payment$UserName = payment.UserName) === null || _payment$UserName === void 0 ? void 0 : _payment$UserName.toLowerCase().includes(searchTerm.toLowerCase())) || ((_payment$TableID = payment.TableID) === null || _payment$TableID === void 0 ? void 0 : _payment$TableID.toString().includes(searchTerm));\n  });\n\n  // Separate paid and unpaid payments\n  const unpaidPayments = filteredPayments.filter(payment => payment.TotalPrice === 0);\n  const paidPayments = filteredPayments.filter(payment => payment.TotalPrice > 0);\n\n  // Thêm style cho modal vào DOM\n  useEffect(() => {\n    const styleElement = document.createElement(\"style\");\n    styleElement.innerHTML = modalStyles;\n    document.head.appendChild(styleElement);\n    return () => {\n      document.head.removeChild(styleElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardSection, {\n      title: \"Qu\\u1EA3n l\\xFD thanh to\\xE1n\",\n      icon: /*#__PURE__*/_jsxDEV(CreditCard, {\n        className: \"h-5 w-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 58\n      }, this),\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-search-container\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"order-search-icon h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"T\\xECm ki\\u1EBFm theo t\\xEAn ho\\u1EB7c b\\xE0n...\",\n          className: \"order-search-input\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(Loader2, {\n          className: \"h-8 w-8 loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-gray-600\",\n          children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u thanh to\\xE1n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\",\n            children: \"Ch\\u01B0a thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this), unpaidPayments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Kh\\xF4ng c\\xF3 \\u0111\\u01A1n h\\xE0ng ch\\u01B0a thanh to\\xE1n.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto w-full\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"orders-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"M\\xE3 \\u0111\\u01A1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"B\\xE0n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ng\\xE0y \\u0111\\u1EB7t\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Kh\\xE1ch h\\xE0ng\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Thao t\\xE1c\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: unpaidPayments.map(payment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: payment.OrderID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: payment.TableID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(payment.OrderDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 710,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"font-medium\",\n                    children: payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handlePaymentClick(payment),\n                      className: \"serve-button\",\n                      children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                        className: \"h-4 w-4 mr-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 714,\n                        columnNumber: 31\n                      }, this), \"Thanh to\\xE1n\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 713,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 712,\n                    columnNumber: 27\n                  }, this)]\n                }, payment.PaymentID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\",\n            children: \"\\u0110\\xE3 thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this), paidPayments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Kh\\xF4ng c\\xF3 \\u0111\\u01A1n h\\xE0ng \\u0111\\xE3 thanh to\\xE1n.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto w-full\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"orders-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"M\\xE3 \\u0111\\u01A1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"B\\xE0n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ng\\xE0y \\u0111\\u1EB7t\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Kh\\xE1ch h\\xE0ng\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"T\\u1ED5ng ti\\u1EC1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: paidPayments.map(payment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: payment.OrderID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: payment.TableID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(payment.OrderDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"font-medium\",\n                    children: payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"font-medium text-green-600\",\n                    children: formatCurrency(payment.TotalPrice)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 27\n                  }, this)]\n                }, payment.PaymentID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 7\n    }, this), dialogOpen && selectedPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm transition-opacity duration-300\",\n        onClick: () => setDialogOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-white rounded-lg shadow-xl w-full max-w-md mx-4 transform transition-all duration-300 ease-in-out scale-100 opacity-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-4 border-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"S\\u1EED d\\u1EE5ng \\u0111i\\u1EC3m t\\xEDch l\\u0169y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDialogOpen(false),\n            className: \"text-gray-400 hover:text-gray-500 focus:outline-none\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"\\u0110\\xF3ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-6 w-6\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded-md\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: [\"Kh\\xE1ch h\\xE0ng: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: selectedPayment.UserName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: [\"\\u0110i\\u1EC3m hi\\u1EC7n c\\xF3: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: [selectedPayment.Points, \" \\u0111i\\u1EC3m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: [\"Gi\\xE1 tr\\u1ECB \\u0111\\u01A1n h\\xE0ng: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: formatCurrency(selectedPayment.TotalPrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pointsInput\",\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Nh\\u1EADp s\\u1ED1 \\u0111i\\u1EC3m mu\\u1ED1n s\\u1EED d\\u1EE5ng:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"pointsInput\",\n                type: \"number\",\n                min: \"0\",\n                max: Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000)),\n                value: pointsToUse,\n                onChange: e => setPointsToUse(Number.parseInt(e.target.value) || 0),\n                className: \"form-input w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500 mt-1\",\n                children: [\"1 \\u0111i\\u1EC3m = 1.000\\u0111 (T\\u1ED1i \\u0111a:\", \" \", Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000)), \" \\u0111i\\u1EC3m)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 p-4 bg-indigo-50 rounded-md border border-indigo-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-indigo-800\",\n                children: \"T\\u1ED5ng thanh to\\xE1n sau khi s\\u1EED d\\u1EE5ng \\u0111i\\u1EC3m:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xl font-bold text-indigo-700\",\n                children: formatCurrency(Math.max(0, selectedPayment.TotalPrice - pointsToUse * 1000))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end items-center gap-3 p-4 border-t bg-gray-50 rounded-b-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDialogOpen(false),\n            className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\",\n            children: \"H\\u1EE7y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUserPayment,\n            className: \"px-4 py-2 bg-indigo-600 rounded-md text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\",\n            children: \"X\\xE1c nh\\u1EADn thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 659,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentSection, \"a4i2CFsrhrezUS21c3+a/jWj29Y=\");\n_c = PaymentSection;\nexport default PaymentSection;\nvar _c;\n$RefreshReg$(_c, \"PaymentSection\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","Loader2","AlertCircle","CreditCard","Search","CheckCircle","DashboardSection","jsxDEV","_jsxDEV","Fragment","_Fragment","modalStyles","PaymentSection","payments","setPayments","loading","setLoading","error","setError","searchTerm","setSearchTerm","dialogOpen","setDialogOpen","selectedPayment","setSelectedPayment","pointsToUse","setPointsToUse","fetchPayments","response","fetch","ok","Error","data","json","err","console","intervalId","setInterval","clearInterval","handlePaymentClick","payment","UserID","handleGuestPayment","method","headers","body","JSON","stringify","orderId","OrderID","amount","TotalPrice","paymentMethod","handleUserPayment","pointsValue","newAmount","Math","max","userId","usingPoints","pointsUsedNumber","formatDate","dateString","date","Date","toLocaleString","year","month","day","hour","minute","formatCurrency","Intl","NumberFormat","style","currency","format","filteredPayments","filter","_payment$UserName","_payment$TableID","UserName","toLowerCase","includes","TableID","toString","unpaidPayments","paidPayments","styleElement","document","createElement","innerHTML","head","appendChild","removeChild","className","children","title","icon","fileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","OrderDate","onClick","PaymentID","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Points","htmlFor","id","min","floor","Number","parseInt","_c","$RefreshReg$"],"sources":["/home/dhpho/Programming/NCKH/admin-web/src/PaymentSection.js"],"sourcesContent":["// // \"use client\"\n\n// // import { useState, useEffect } from \"react\"\n// // import { CreditCard, Search, Loader2, AlertCircle } from \"lucide-react\"\n// // import \"./Content.css\"\n// // import DashboardSection from \"./Dashboard/DashboardSection\"\n\n// // const PaymentSection = () => {\n// //   const [payments, setPayments] = useState([])\n// //   const [loading, setLoading] = useState(true)\n// //   const [error, setError] = useState(null)\n// //   const [searchTerm, setSearchTerm] = useState(\"\")\n\n// //   const loadPayments = async () => {\n// //     try {\n// //       setLoading(true)\n// //       const response = await fetch(\"http://localhost:8080/api/payments\", {\n// //         method: \"GET\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       })\n\n// //       if (!response.ok) {\n// //         throw new Error(\"Failed to fetch payments\")\n// //       }\n\n// //       const data = await response.json()\n// //       setPayments(data)\n// //       setError(null)\n// //     } catch (err) {\n// //       console.error(\"Error loading payments:\", err)\n// //       setError(\"Failed to load payments. Please try again later.\")\n// //     } finally {\n// //       setLoading(false)\n// //     }\n// //   }\n\n// //   useEffect(() => {\n// //     loadPayments()\n// //   }, [])\n\n// //   // Filter payments based on search term\n// //   const filteredPayments = payments.filter(\n// //     (payment) => payment.OrderID?.toString().includes(searchTerm) || payment.TableID?.toString().includes(searchTerm),\n// //   )\n\n// //   // Format currency\n// //   const formatCurrency = (amount) => {\n// //     return new Intl.NumberFormat(\"vi-VN\", {\n// //       style: \"currency\",\n// //       currency: \"VND\",\n// //     }).format(amount)\n// //   }\n\n// //   // Format date\n// //   const formatDate = (dateString) => {\n// //     const date = new Date(dateString)\n// //     return new Intl.DateTimeFormat(\"vi-VN\", {\n// //       year: \"numeric\",\n// //       month: \"2-digit\",\n// //       day: \"2-digit\",\n// //       hour: \"2-digit\",\n// //       minute: \"2-digit\",\n// //     }).format(date)\n// //   }\n\n// //   return (\n// //     <div className=\"space-y-6\">\n// //       <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n// //         {error && (\n// //           <div className=\"error-alert\">\n// //             <AlertCircle className=\"h-5 w-5\" />\n// //             {error}\n// //           </div>\n// //         )}\n\n// //         <div className=\"order-search-container\">\n// //           <Search className=\"order-search-icon h-4 w-4\" />\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Tìm kiếm theo mã đơn hàng hoặc bàn...\"\n// //             className=\"order-search-input\"\n// //             value={searchTerm}\n// //             onChange={(e) => setSearchTerm(e.target.value)}\n// //           />\n// //           <button onClick={loadPayments} className=\"refresh-button\">\n// //             Làm mới\n// //           </button>\n// //         </div>\n\n// //         {loading ? (\n// //           <div className=\"loading-container\">\n// //             <Loader2 className=\"h-8 w-8 loading-spinner\" />\n// //             <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n// //           </div>\n// //         ) : (\n// //           <>\n// //             {filteredPayments.length === 0 ? (\n// //               <div className=\"empty-state\">\n// //                 <p>Không tìm thấy dữ liệu thanh toán.</p>\n// //               </div>\n// //             ) : (\n// //               <div className=\"overflow-x-auto w-full\">\n// //                 <table className=\"orders-table\">\n// //                   <thead>\n// //                     <tr>\n// //                       <th>Mã thanh toán</th>\n// //                       <th>Mã đơn hàng</th>\n// //                       <th>Bàn</th>\n// //                       <th>Tổng tiền</th>\n// //                       <th>Ngày thanh toán</th>\n// //                       <th>Trạng thái</th>\n// //                     </tr>\n// //                   </thead>\n// //                   <tbody>\n// //                     {filteredPayments.map((payment) => (\n// //                       <tr key={payment.PaymentID}>\n// //                         <td>{payment.PaymentID}</td>\n// //                         <td>{payment.OrderID}</td>\n// //                         <td>{payment.TableID}</td>\n// //                         <td className=\"font-medium\">{formatCurrency(payment.Amount)}</td>\n// //                         <td>{formatDate(payment.PaymentDate)}</td>\n// //                         <td>\n// //                           <span\n// //                             className={`order-status ${\n// //                               payment.Status === \"Completed\"\n// //                                 ? \"status-completed\"\n// //                                 : payment.Status === \"Pending\"\n// //                                   ? \"status-pending\"\n// //                                   : \"status-progress\"\n// //                             }`}\n// //                           >\n// //                             {payment.Status === \"Completed\"\n// //                               ? \"Hoàn thành\"\n// //                               : payment.Status === \"Pending\"\n// //                                 ? \"Chờ xử lý\"\n// //                                 : \"Đang xử lý\"}\n// //                           </span>\n// //                         </td>\n// //                       </tr>\n// //                     ))}\n// //                   </tbody>\n// //                 </table>\n// //               </div>\n// //             )}\n// //           </>\n// //         )}\n// //       </DashboardSection>\n// //     </div>\n// //   )\n// // }\n\n// // export default PaymentSection\n\n\n// \"use client\"\n\n// import { useEffect, useState } from \"react\"\n// import { Loader2, AlertCircle, CreditCard, Search, CheckCircle } from \"lucide-react\"\n// import \"./Content.css\"\n// import DashboardSection from \"./Dashboard/DashboardSection\"\n\n// const PaymentSection = () => {\n//   const [payments, setPayments] = useState([])\n//   const [loading, setLoading] = useState(true)\n//   const [error, setError] = useState(null)\n//   const [searchTerm, setSearchTerm] = useState(\"\")\n//   const [dialogOpen, setDialogOpen] = useState(false)\n//   const [selectedPayment, setSelectedPayment] = useState(null)\n//   const [pointsToUse, setPointsToUse] = useState(0)\n\n//   const fetchPayments = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/payments/all\")\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch payments\")\n//       }\n//       const data = await response.json()\n//       setPayments(data.payments || [])\n//       setError(null)\n//     } catch (err) {\n//       console.error(\"Error fetching payments:\", err)\n//       setError(\"Failed to load payments. Please try again later.\")\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   useEffect(() => {\n//     fetchPayments()\n\n//     // Set up interval to fetch data every second\n//     const intervalId = setInterval(() => {\n//       fetchPayments()\n//     }, 1000)\n\n//     // Clean up interval on component unmount\n//     return () => clearInterval(intervalId)\n//   }, [])\n\n//   const handlePaymentClick = (payment) => {\n//     if (payment.UserID !== -1) {\n//       // Open dialog for registered user\n//       setSelectedPayment(payment)\n//       setPointsToUse(0)\n//       setDialogOpen(true)\n//     } else {\n//       // Handle guest payment directly\n//       handleGuestPayment(payment)\n//     }\n//   }\n\n//   const handleGuestPayment = async (payment) => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/payments/handleGuess\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           orderId: payment.OrderID,\n//           amount: payment.TotalPrice,\n//           paymentMethod: \"cash\",\n//         }),\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to process payment\")\n//       }\n\n//       // Refresh payments after successful payment\n//       fetchPayments()\n//     } catch (err) {\n//       console.error(\"Error processing guest payment:\", err)\n//       setError(\"Failed to process payment. Please try again.\")\n//     }\n//   }\n\n//   const handleUserPayment = async () => {\n//     if (!selectedPayment) return\n\n//     try {\n//       // Calculate new amount after points deduction\n//       const pointsValue = pointsToUse * 1000\n//       const newAmount = Math.max(0, selectedPayment.TotalPrice - pointsValue)\n\n//       const response = await fetch(\"http://localhost:8080/api/payments/handleUser\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           userId: selectedPayment.UserID,\n//           orderId: selectedPayment.OrderID,\n//           usingPoints: pointsToUse > 0 ? 1 : 0,\n//           pointsUsedNumber: pointsToUse,\n//           amount: newAmount,\n//           paymentMethod: \"cash\",\n//         }),\n//       })\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to process payment\")\n//       }\n\n//       // Close dialog and refresh payments\n//       setDialogOpen(false)\n//       fetchPayments()\n//     } catch (err) {\n//       console.error(\"Error processing user payment:\", err)\n//       setError(\"Failed to process payment. Please try again.\")\n//     }\n//   }\n\n//   // Format date to a more readable format\n//   const formatDate = (dateString) => {\n//     const date = new Date(dateString)\n//     return date.toLocaleString(\"vi-VN\", {\n//       year: \"numeric\",\n//       month: \"2-digit\",\n//       day: \"2-digit\",\n//       hour: \"2-digit\",\n//       minute: \"2-digit\",\n//     })\n//   }\n\n//   // Format currency\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat(\"vi-VN\", {\n//       style: \"currency\",\n//       currency: \"VND\",\n//     }).format(amount)\n//   }\n\n//   // Filter payments based on search term\n//   const filteredPayments = payments.filter(\n//     (payment) =>\n//       payment.UserName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//       payment.TableID?.toString().includes(searchTerm),\n//   )\n\n//   // Separate paid and unpaid payments\n//   const unpaidPayments = filteredPayments.filter((payment) => payment.TotalPrice === 0)\n//   const paidPayments = filteredPayments.filter((payment) => payment.TotalPrice > 0)\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n//         {error && (\n//           <div className=\"error-alert\">\n//             <AlertCircle className=\"h-5 w-5\" />\n//             {error}\n//           </div>\n//         )}\n\n//         <div className=\"order-search-container\">\n//           <Search className=\"order-search-icon h-4 w-4\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Tìm kiếm theo tên hoặc bàn...\"\n//             className=\"order-search-input\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//           />\n//         </div>\n\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <Loader2 className=\"h-8 w-8 loading-spinner\" />\n//             <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n//           </div>\n//         ) : (\n//           <>\n//             {/* Unpaid Payments Section */}\n//             <div className=\"mb-8\">\n//               <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Chưa thanh toán</h3>\n//               {unpaidPayments.length === 0 ? (\n//                 <div className=\"empty-state\">\n//                   <p>Không có đơn hàng chưa thanh toán.</p>\n//                 </div>\n//               ) : (\n//                 <div className=\"overflow-x-auto w-full\">\n//                   <table className=\"orders-table\">\n//                     <thead>\n//                       <tr>\n//                         <th>Mã đơn</th>\n//                         <th>Bàn</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Khách hàng</th>\n//                         <th>Thao tác</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {unpaidPayments.map((payment) => (\n//                         <tr key={payment.PaymentID}>\n//                           <td>{payment.OrderID}</td>\n//                           <td>{payment.TableID}</td>\n//                           <td>{formatDate(payment.OrderDate)}</td>\n//                           <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n//                           <td>\n//                             <button onClick={() => handlePaymentClick(payment)} className=\"serve-button\">\n//                               <CheckCircle className=\"h-4 w-4 mr-1\" />\n//                               Thanh toán\n//                             </button>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               )}\n//             </div>\n\n//             {/* Paid Payments Section */}\n//             <div>\n//               <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Đã thanh toán</h3>\n//               {paidPayments.length === 0 ? (\n//                 <div className=\"empty-state\">\n//                   <p>Không có đơn hàng đã thanh toán.</p>\n//                 </div>\n//               ) : (\n//                 <div className=\"overflow-x-auto w-full\">\n//                   <table className=\"orders-table\">\n//                     <thead>\n//                       <tr>\n//                         <th>Mã đơn</th>\n//                         <th>Bàn</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Khách hàng</th>\n//                         <th>Tổng tiền</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {paidPayments.map((payment) => (\n//                         <tr key={payment.PaymentID}>\n//                           <td>{payment.OrderID}</td>\n//                           <td>{payment.TableID}</td>\n//                           <td>{formatDate(payment.OrderDate)}</td>\n//                           <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n//                           <td className=\"font-medium text-green-600\">{formatCurrency(payment.TotalPrice)}</td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               )}\n//             </div>\n//           </>\n//         )}\n//       </DashboardSection>\n\n//       {/* Points Dialog */}\n//       {dialogOpen && selectedPayment && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n//           <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n//             <h3 className=\"text-lg font-semibold mb-4\">Sử dụng điểm tích lũy</h3>\n\n//             <div className=\"mb-4\">\n//               <p className=\"text-sm text-gray-600 mb-1\">Khách hàng: {selectedPayment.UserName}</p>\n//               <p className=\"text-sm text-gray-600 mb-1\">Điểm hiện có: {selectedPayment.Points} điểm</p>\n//               <p className=\"text-sm text-gray-600 mb-3\">\n//                 Giá trị đơn hàng: {formatCurrency(selectedPayment.TotalPrice)}\n//               </p>\n\n//               <div className=\"mt-4\">\n//                 <label htmlFor=\"pointsInput\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                   Nhập số điểm muốn sử dụng:\n//                 </label>\n//                 <input\n//                   id=\"pointsInput\"\n//                   type=\"number\"\n//                   min=\"0\"\n//                   max={Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))}\n//                   value={pointsToUse}\n//                   onChange={(e) => setPointsToUse(Number.parseInt(e.target.value) || 0)}\n//                   className=\"form-input w-full\"\n//                 />\n//                 <p className=\"text-xs text-gray-500 mt-1\">\n//                   1 điểm = 1.000đ (Tối đa:{\" \"}\n//                   {Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))} điểm)\n//                 </p>\n//               </div>\n\n//               <div className=\"mt-4 p-3 bg-gray-50 rounded-md\">\n//                 <p className=\"text-sm font-medium\">Tổng thanh toán sau khi sử dụng điểm:</p>\n//                 <p className=\"text-lg font-bold text-green-600\">\n//                   {formatCurrency(Math.max(0, selectedPayment.TotalPrice - pointsToUse * 1000))}\n//                 </p>\n//               </div>\n//             </div>\n\n//             <div className=\"flex justify-end space-x-3 mt-6\">\n//               <button\n//                 onClick={() => setDialogOpen(false)}\n//                 className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n//               >\n//                 Hủy\n//               </button>\n//               <button\n//                 onClick={handleUserPayment}\n//                 className=\"px-4 py-2 bg-indigo-600 rounded-md text-sm font-medium text-white hover:bg-indigo-700\"\n//               >\n//                 Xác nhận thanh toán\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default PaymentSection\n\n\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Loader2, AlertCircle, CreditCard, Search, CheckCircle } from \"lucide-react\"\nimport \"./Content.css\"\nimport DashboardSection from \"./Dashboard/DashboardSection\"\n\n// Thêm CSS cho hiệu ứng modal\nconst modalStyles = `\n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n  \n  @keyframes slideIn {\n    from { transform: translateY(-10px); opacity: 0; }\n    to { transform: translateY(0); opacity: 1; }\n  }\n  \n  .modal-overlay {\n    animation: fadeIn 0.3s ease-out;\n  }\n  \n  .modal-content {\n    animation: slideIn 0.3s ease-out;\n  }\n`\n\nconst PaymentSection = () => {\n  const [payments, setPayments] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [selectedPayment, setSelectedPayment] = useState(null)\n  const [pointsToUse, setPointsToUse] = useState(0)\n\n  const fetchPayments = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/payments/all\")\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch payments\")\n      }\n      const data = await response.json()\n      setPayments(data.payments || [])\n      setError(null)\n    } catch (err) {\n      console.error(\"Error fetching payments:\", err)\n      setError(\"Failed to load payments. Please try again later.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchPayments()\n\n    // Set up interval to fetch data every second\n    const intervalId = setInterval(() => {\n      fetchPayments()\n    }, 1000)\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId)\n  }, [])\n\n  const handlePaymentClick = (payment) => {\n    if (payment.UserID !== -1) {\n      // Open dialog for registered user\n      setSelectedPayment(payment)\n      setPointsToUse(0)\n      setDialogOpen(true)\n    } else {\n      // Handle guest payment directly\n      handleGuestPayment(payment)\n    }\n  }\n\n  const handleGuestPayment = async (payment) => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/payments/handleGuess\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          orderId: payment.OrderID,\n          amount: payment.TotalPrice,\n          paymentMethod: \"cash\",\n        }),\n      })\n\n      if (!response.ok) {\n        throw new Error(\"Failed to process payment\")\n      }\n\n      // Refresh payments after successful payment\n      fetchPayments()\n    } catch (err) {\n      console.error(\"Error processing guest payment:\", err)\n      setError(\"Failed to process payment. Please try again.\")\n    }\n  }\n\n  const handleUserPayment = async () => {\n    if (!selectedPayment) return\n\n    try {\n      // Calculate new amount after points deduction\n      const pointsValue = pointsToUse * 1000\n      const newAmount = Math.max(0, selectedPayment.TotalPrice - pointsValue)\n\n      const response = await fetch(\"http://localhost:8080/api/payments/handleUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userId: selectedPayment.UserID,\n          orderId: selectedPayment.OrderID,\n          usingPoints: pointsToUse > 0 ? 1 : 0,\n          pointsUsedNumber: pointsToUse,\n          amount: newAmount,\n          paymentMethod: \"cash\",\n        }),\n      })\n\n      if (!response.ok) {\n        throw new Error(\"Failed to process payment\")\n      }\n\n      // Close dialog and refresh payments\n      setDialogOpen(false)\n      fetchPayments()\n    } catch (err) {\n      console.error(\"Error processing user payment:\", err)\n      setError(\"Failed to process payment. Please try again.\")\n    }\n  }\n\n  // Format date to a more readable format\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    return date.toLocaleString(\"vi-VN\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    })\n  }\n\n  // Format currency\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\",\n    }).format(amount)\n  }\n\n  // Filter payments based on search term\n  const filteredPayments = payments.filter(\n    (payment) =>\n      payment.UserName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      payment.TableID?.toString().includes(searchTerm),\n  )\n\n  // Separate paid and unpaid payments\n  const unpaidPayments = filteredPayments.filter((payment) => payment.TotalPrice === 0)\n  const paidPayments = filteredPayments.filter((payment) => payment.TotalPrice > 0)\n\n  // Thêm style cho modal vào DOM\n  useEffect(() => {\n    const styleElement = document.createElement(\"style\")\n    styleElement.innerHTML = modalStyles\n    document.head.appendChild(styleElement)\n\n    return () => {\n      document.head.removeChild(styleElement)\n    }\n  }, [])\n\n  return (\n    <div className=\"space-y-6\">\n      <DashboardSection title=\"Quản lý thanh toán\" icon={<CreditCard className=\"h-5 w-5\" />}>\n        {error && (\n          <div className=\"error-alert\">\n            <AlertCircle className=\"h-5 w-5\" />\n            {error}\n          </div>\n        )}\n\n        <div className=\"order-search-container\">\n          <Search className=\"order-search-icon h-4 w-4\" />\n          <input\n            type=\"text\"\n            placeholder=\"Tìm kiếm theo tên hoặc bàn...\"\n            className=\"order-search-input\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n\n        {loading ? (\n          <div className=\"loading-container\">\n            <Loader2 className=\"h-8 w-8 loading-spinner\" />\n            <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu thanh toán...</span>\n          </div>\n        ) : (\n          <>\n            {/* Unpaid Payments Section */}\n            <div className=\"mb-8\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Chưa thanh toán</h3>\n              {unpaidPayments.length === 0 ? (\n                <div className=\"empty-state\">\n                  <p>Không có đơn hàng chưa thanh toán.</p>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto w-full\">\n                  <table className=\"orders-table\">\n                    <thead>\n                      <tr>\n                        <th>Mã đơn</th>\n                        <th>Bàn</th>\n                        <th>Ngày đặt</th>\n                        <th>Khách hàng</th>\n                        <th>Thao tác</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {unpaidPayments.map((payment) => (\n                        <tr key={payment.PaymentID}>\n                          <td>{payment.OrderID}</td>\n                          <td>{payment.TableID}</td>\n                          <td>{formatDate(payment.OrderDate)}</td>\n                          <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n                          <td>\n                            <button onClick={() => handlePaymentClick(payment)} className=\"serve-button\">\n                              <CheckCircle className=\"h-4 w-4 mr-1\" />\n                              Thanh toán\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n\n            {/* Paid Payments Section */}\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-800 border-b pb-2\">Đã thanh toán</h3>\n              {paidPayments.length === 0 ? (\n                <div className=\"empty-state\">\n                  <p>Không có đơn hàng đã thanh toán.</p>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto w-full\">\n                  <table className=\"orders-table\">\n                    <thead>\n                      <tr>\n                        <th>Mã đơn</th>\n                        <th>Bàn</th>\n                        <th>Ngày đặt</th>\n                        <th>Khách hàng</th>\n                        <th>Tổng tiền</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {paidPayments.map((payment) => (\n                        <tr key={payment.PaymentID}>\n                          <td>{payment.OrderID}</td>\n                          <td>{payment.TableID}</td>\n                          <td>{formatDate(payment.OrderDate)}</td>\n                          <td className=\"font-medium\">{payment.UserID !== -1 ? payment.UserName : \"Khách vãng lai\"}</td>\n                          <td className=\"font-medium text-green-600\">{formatCurrency(payment.TotalPrice)}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </DashboardSection>\n\n      {/* Points Dialog Modal */}\n      {dialogOpen && selectedPayment && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n          {/* Overlay - nền mờ */}\n          <div\n            className=\"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm transition-opacity duration-300\"\n            onClick={() => setDialogOpen(false)}\n          ></div>\n\n          {/* Dialog box */}\n          <div className=\"relative bg-white rounded-lg shadow-xl w-full max-w-md mx-4 transform transition-all duration-300 ease-in-out scale-100 opacity-100\">\n            {/* Header with close button */}\n            <div className=\"flex items-center justify-between p-4 border-b\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Sử dụng điểm tích lũy</h3>\n              <button\n                onClick={() => setDialogOpen(false)}\n                className=\"text-gray-400 hover:text-gray-500 focus:outline-none\"\n              >\n                <span className=\"sr-only\">Đóng</span>\n                <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Content */}\n            <div className=\"p-6\">\n              <div className=\"space-y-4\">\n                <div className=\"bg-gray-50 p-3 rounded-md\">\n                  <p className=\"text-sm text-gray-600 mb-1\">\n                    Khách hàng: <span className=\"font-medium\">{selectedPayment.UserName}</span>\n                  </p>\n                  <p className=\"text-sm text-gray-600 mb-1\">\n                    Điểm hiện có: <span className=\"font-medium\">{selectedPayment.Points} điểm</span>\n                  </p>\n                  <p className=\"text-sm text-gray-600\">\n                    Giá trị đơn hàng: <span className=\"font-medium\">{formatCurrency(selectedPayment.TotalPrice)}</span>\n                  </p>\n                </div>\n\n                <div>\n                  <label htmlFor=\"pointsInput\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Nhập số điểm muốn sử dụng:\n                  </label>\n                  <input\n                    id=\"pointsInput\"\n                    type=\"number\"\n                    min=\"0\"\n                    max={Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))}\n                    value={pointsToUse}\n                    onChange={(e) => setPointsToUse(Number.parseInt(e.target.value) || 0)}\n                    className=\"form-input w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    1 điểm = 1.000đ (Tối đa:{\" \"}\n                    {Math.min(selectedPayment.Points, Math.floor(selectedPayment.TotalPrice / 1000))} điểm)\n                  </p>\n                </div>\n\n                <div className=\"mt-4 p-4 bg-indigo-50 rounded-md border border-indigo-100\">\n                  <p className=\"text-sm font-medium text-indigo-800\">Tổng thanh toán sau khi sử dụng điểm:</p>\n                  <p className=\"text-xl font-bold text-indigo-700\">\n                    {formatCurrency(Math.max(0, selectedPayment.TotalPrice - pointsToUse * 1000))}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Footer with action buttons */}\n            <div className=\"flex justify-end items-center gap-3 p-4 border-t bg-gray-50 rounded-b-lg\">\n              <button\n                onClick={() => setDialogOpen(false)}\n                className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\"\n              >\n                Hủy\n              </button>\n              <button\n                onClick={handleUserPayment}\n                className=\"px-4 py-2 bg-indigo-600 rounded-md text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\"\n              >\n                Xác nhận thanh toán\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default PaymentSection\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}