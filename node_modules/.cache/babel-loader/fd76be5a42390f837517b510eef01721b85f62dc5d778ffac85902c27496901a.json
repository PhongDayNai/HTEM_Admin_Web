{"ast":null,"code":"// // \"use client\";\n\n// // import { useState, useEffect, useMemo } from \"react\";\n// // import \"./Content.css\";\n\n// // const MenuManager = ({ icon }) => {\n// //   const [menuData, setMenuData] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   // Hàm lấy dữ liệu menu từ API\n// //   const fetchData = async () => {\n// //     try {\n// //       setLoading(true);\n// //       const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n// //         method: \"GET\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`Lỗi: ${response.status}`);\n// //       }\n\n// //       const data = await response.json();\n// //       setMenuData(data.setList || []);\n// //       setError(null);\n// //     } catch (err) {\n// //       console.error(\"Lấy dữ liệu menu thất bại:\", err);\n// //       setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   // Lấy dữ liệu khi component được mount\n// //   useEffect(() => {\n// //     fetchData();\n// //   }, []);\n\n// //   // Hàm lấy đường dẫn ảnh dựa trên tên set\n// //   const getImagePath = useMemo(() => {\n// //     return (setName) => {\n// //       console.log(setName);\n// //       if (setName === \"Hotpot\") {\n// //         return \"/assets/Buffet_Lau.png\";\n// //       } else if (setName === \"Seafood Hotpot\") {\n// //         return \"/assets/Buffet_Lau_Hai_San.png\";\n// //       } else if (setName === \"BBQ\") {\n// //         return \"/assets/Buffet_BBQ.png\";\n// //       } else if (setName.startsWith(\"Sashimi\")) {\n// //         const formattedName = setName.replace(/\\s+/g, \"_\");\n// //         console.log(`/assets/Buffet_${formattedName}.png`);\n// //         return `/assets/Buffet_${formattedName}.png`;\n// //       } else {\n// //         const formattedName = setName.replace(/\\s+/g, \"_\");\n// //         console.log(`/assets/Buffet_${formattedName}.png`);\n// //         return `/assets/Buffet_${formattedName}.png`;\n// //       }\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div className=\"dashboard-section\">\n// //       <div className=\"section-header\">\n// //         <div className=\"section-title\">\n// //           {icon && <span className=\"section-icon\">{icon}</span>}\n// //           <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n// //         </div>\n// //         <button onClick={fetchData} className=\"refresh-button\">\n// //           Làm mới Menu\n// //         </button>\n// //       </div>\n\n// //       <div className=\"section-content\">\n// //         {loading ? (\n// //           <div className=\"loading-container\">\n// //             <svg\n// //               className=\"animate-spin h-8 w-8 text-indigo-600\"\n// //               xmlns=\"http://www.w3.org/2000/svg\"\n// //               fill=\"none\"\n// //               viewBox=\"0 0 24 24\"\n// //             >\n// //               <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //               <path\n// //                 className=\"opacity-75\"\n// //                 fill=\"currentColor\"\n// //                 d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n// //               ></path>\n// //             </svg>\n// //           </div>\n// //         ) : error ? (\n// //           <div className=\"error-alert\">\n// //             <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n// //               <path\n// //                 fillRule=\"evenodd\"\n// //                 d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n// //                 clipRule=\"evenodd\"\n// //               ></path>\n// //             </svg>\n// //             <span>{error}</span>\n// //           </div>\n// //         ) : menuData.length === 0 ? (\n// //           <div className=\"empty-state\">\n// //             <p>Không tìm thấy mục menu.</p>\n// //           </div>\n// //         ) : (\n// //           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n// //             {menuData.map((set) => (\n// //               <div key={set.id} className=\"dashboard-card card-gradient-indigo\">\n// //                 <div className=\"card-content\">\n// //                   <div className=\"card-info\">\n// //                     <h3>{set.Name}</h3>\n// //                     <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n// //                     <p className=\"text-sm text-gray-500\">\n// //                       {set.Dishes ? `${set.Dishes.length} món` : \"Không có món nào\"}\n// //                     </p>\n// //                   </div>\n// //                   <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n// //                     <img\n// //                       src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n// //                       alt={set.Name}\n// //                       className=\"w-full h-full object-cover\"\n// //                       onError={(e) => {\n// //                         console.log(`Tải ảnh thất bại: ${e.target.src}`);\n// //                         e.target.onerror = null;\n// //                         e.target.src = \"/assets/default_set.png\";\n// //                       }}\n// //                     />\n// //                   </div>\n// //                 </div>\n// //               </div>\n// //             ))}\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default MenuManager;\n\n// \"use client\";\n\n// import { useState, useEffect, useMemo } from \"react\";\n// import \"./Content.css\";\n\n// const MenuManager = ({ icon }) => {\n//   const [menuData, setMenuData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [expandedSet, setExpandedSet] = useState(null); // Trạng thái mở rộng\n\n//   // Hàm lấy dữ liệu menu từ API\n//   const fetchData = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Lỗi: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setMenuData(data.setList || []);\n//       setError(null);\n//     } catch (err) {\n//       console.error(\"Lấy dữ liệu menu thất bại:\", err);\n//       setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Lấy dữ liệu khi component được mount\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   // Hàm lấy đường dẫn ảnh dựa trên tên set\n//   const getImagePath = useMemo(() => {\n//     return (setName) => {\n//       console.log(setName);\n//       if (setName === \"Hotpot\") {\n//         return \"/assets/Buffet_Lau.png\";\n//       } else if (setName === \"Seafood Hotpot\") {\n//         return \"/assets/Buffet_Lau_Hai_San.png\";\n//       } else if (setName === \"BBQ\") {\n//         return \"/assets/Buffet_BBQ.png\";\n//       } else if (setName.startsWith(\"Sashimi\")) {\n//         const formattedName = setName.replace(/\\s+/g, \"_\");\n//         console.log(`/assets/Buffet_${formattedName}.png`);\n//         return `/assets/Buffet_${formattedName}.png`;\n//       } else {\n//         const formattedName = setName.replace(/\\s+/g, \"_\");\n//         console.log(`/assets/Buffet_${formattedName}.png`);\n//         return `/assets/Buffet_${formattedName}.png`;\n//       }\n//     };\n//   }, []);\n\n//   // Hàm dịch Category sang tiếng Việt\n//   const translateCategory = (category) => {\n//     const translations = {\n//       Appetizer: \"Khai vị\",\n//       Main: \"Món chính\",\n//       Dessert: \"Tráng miệng\",\n//     };\n//     return translations[category] || category; // Trả về category gốc nếu không có bản dịch\n//   };\n\n//   // Hàm xử lý nhấp để mở rộng/đóng mục menu\n//   const handleToggleExpand = (setId) => {\n//     setExpandedSet(expandedSet === setId ? null : setId); // Toggle trạng thái\n//   };\n\n//   return (\n//     <div className=\"dashboard-section\">\n//       <div className=\"section-header\">\n//         <div className=\"section-title\">\n//           {icon && <span className=\"section-icon\">{icon}</span>}\n//           <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n//         </div>\n//         <button onClick={fetchData} className=\"refresh-button\">\n//           Làm mới Menu\n//         </button>\n//       </div>\n\n//       <div className=\"section-content\">\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <svg\n//               className=\"animate-spin h-8 w-8 text-indigo-600\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//             >\n//               <circle\n//                 className=\"opacity-25\"\n//                 cx=\"12\"\n//                 cy=\"12\"\n//                 r=\"10\"\n//                 stroke=\"currentColor\"\n//                 strokeWidth=\"4\"\n//               ></circle>\n//               <path\n//                 className=\"opacity-75\"\n//                 fill=\"currentColor\"\n//                 d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n//               ></path>\n//             </svg>\n//           </div>\n//         ) : error ? (\n//           <div className=\"error-alert\">\n//             <svg\n//               className=\"w-5 h-5\"\n//               fill=\"currentColor\"\n//               viewBox=\"0 0 20 20\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//             >\n//               <path\n//                 fillRule=\"evenodd\"\n//                 d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n//                 clipRule=\"evenodd\"\n//               ></path>\n//             </svg>\n//             <span>{error}</span>\n//           </div>\n//         ) : menuData.length === 0 ? (\n//           <div className=\"empty-state\">\n//             <p>Không tìm thấy mục menu.</p>\n//           </div>\n//         ) : (\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n//             {menuData.map((set) => (\n//               <div\n//                 key={set.id}\n//                 className=\"dashboard-card card-gradient-indigo\"\n//               >\n//                 <div\n//                   className=\"card-content cursor-pointer\"\n//                   onClick={() => handleToggleExpand(set.id)}\n//                 >\n//                   <div className=\"card-info\">\n//                     <h3>{set.Name}</h3>\n//                     <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n//                     <p className=\"text-sm text-gray-500\">\n//                       {set.Dishes\n//                         ? `${set.Dishes.length} món`\n//                         : \"Không có món nào\"}\n//                     </p>\n//                   </div>\n//                   <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n//                     <img\n//                       src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n//                       alt={set.Name}\n//                       className=\"w-full h-full object-cover\"\n//                       onError={(e) => {\n//                         console.log(`Tải ảnh thất bại: ${e.target.src}`);\n//                         e.target.onerror = null;\n//                         e.target.src = \"/assets/default_set.png\";\n//                       }}\n//                     />\n//                   </div>\n//                 </div>\n//                 {expandedSet === set.id && set.Dishes && set.Dishes.length > 0 && (\n//                   <div className=\"dishes-list p-4 bg-gray-50 border-t border-gray-200\">\n//                     <h4 className=\"text-sm font-medium text-gray-700 mb-2\">\n//                       Danh sách món ăn\n//                     </h4>\n//                     <ul className=\"space-y-2\">\n//                       {set.Dishes.map((dish, index) => (\n//                         <li\n//                           key={index}\n//                           className=\"text-sm text-gray-600 flex justify-between\"\n//                         >\n//                           <span>{dish.Name}</span>\n//                           <span>{translateCategory(dish.Category)}</span>\n//                         </li>\n//                       ))}\n//                     </ul>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MenuManager;\n\n\"use client\";\n\nvar _jsxFileName = \"/home/dhpho/Programming/NCKH/admin-web/src/MenuManager.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useMemo } from \"react\";\nimport { useSpring, animated } from \"@react-spring/web\"; // Thêm react-spring\nimport \"./Content.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuManager = ({\n  icon\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [menuData, setMenuData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedSet, setExpandedSet] = useState(null); // Trạng thái mở rộng\n\n  // Hàm lấy dữ liệu menu từ API\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Lỗi: ${response.status}`);\n      }\n      const data = await response.json();\n      setMenuData(data.setList || []);\n      setError(null);\n    } catch (err) {\n      console.error(\"Lấy dữ liệu menu thất bại:\", err);\n      setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Lấy dữ liệu khi component được mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Hàm lấy đường dẫn ảnh dựa trên tên set\n  const getImagePath = useMemo(() => {\n    return setName => {\n      console.log(setName);\n      if (setName === \"Hotpot\") {\n        return \"/assets/Buffet_Lau.png\";\n      } else if (setName === \"Seafood Hotpot\") {\n        return \"/assets/Buffet_Lau_Hai_San.png\";\n      } else if (setName === \"BBQ\") {\n        return \"/assets/Buffet_BBQ.png\";\n      } else if (setName.startsWith(\"Sashimi\")) {\n        const formattedName = setName.replace(/\\s+/g, \"_\");\n        console.log(`/assets/Buffet_${formattedName}.png`);\n        return `/assets/Buffet_${formattedName}.png`;\n      } else {\n        const formattedName = setName.replace(/\\s+/g, \"_\");\n        console.log(`/assets/Buffet_${formattedName}.png`);\n        return `/assets/Buffet_${formattedName}.png`;\n      }\n    };\n  }, []);\n\n  // Hàm dịch Category sang tiếng Việt và đếm số món còn lại\n  const translateCategory = category => {\n    const translations = {\n      Appetizer: \"Khai vị\",\n      Main: \"Món chính\",\n      Dessert: \"Tráng miệng\"\n    };\n    return translations[category] || category;\n  };\n\n  // Hàm đếm số món theo category\n  const countDishesByCategory = (dishes, category) => {\n    return dishes.filter(dish => dish.Category === category).length;\n  };\n\n  // Hàm xử lý nhấp để mở rộng/đóng mục menu\n  const handleToggleExpand = setId => {\n    setExpandedSet(expandedSet === setId ? null : setId); // Toggle trạng thái\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [icon && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-icon\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        className: \"refresh-button\",\n        children: \"L\\xE0m m\\u1EDBi Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"animate-spin h-8 w-8 text-indigo-600\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-5 h-5\",\n          fill: \"currentColor\",\n          viewBox: \"0 0 20 20\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this) : menuData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Kh\\xF4ng t\\xECm th\\u1EA5y m\\u1EE5c menu.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: _s(menuData.map(_s(set => {\n          _s();\n          // Tính số món còn lại (giả sử hiển thị \"Còn 0...\")\n          const remainingDishes = set.Dishes ? set.Dishes.length : 0;\n\n          // Hiệu ứng mở rộng bằng react-spring\n          const springProps = useSpring({\n            from: {\n              height: 0,\n              opacity: 0\n            },\n            to: {\n              height: expandedSet === set.id ? \"auto\" : 0,\n              opacity: expandedSet === set.id ? 1 : 0\n            },\n            config: {\n              tension: 200,\n              friction: 20\n            } // Điều chỉnh độ mượt của animation\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-card card-gradient-indigo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content cursor-pointer\",\n              onClick: () => handleToggleExpand(set.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: set.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500\",\n                  children: [\"ID Set: \", set.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500\",\n                  children: set.Dishes ? `${set.Dishes.length} món` : \"Không có món nào\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-24 h-24 overflow-hidden rounded-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getImagePath(set.Name) || \"/assets/default_set.png\",\n                  alt: set.Name,\n                  className: \"w-full h-full object-cover\",\n                  onError: e => {\n                    console.log(`Tải ảnh thất bại: ${e.target.src}`);\n                    e.target.onerror = null;\n                    e.target.src = \"/assets/default_set.png\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 19\n            }, this), set.Dishes && set.Dishes.length > 0 && /*#__PURE__*/_jsxDEV(animated.div, {\n              style: {\n                ...springProps,\n                overflow: \"hidden\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dishes-list p-4 bg-white border border-gray-200 rounded-lg shadow-md mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 27\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm font-medium text-gray-700\",\n                      children: [\"C\\xF2n \", remainingDishes, \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                      className: `w-4 h-4 transform transition-transform ${expandedSet === set.id ? \"rotate-180\" : \"\"}`,\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      viewBox: \"0 0 24 24\",\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: \"2\",\n                        d: \"M19 9l-7 7-7-7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 555,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 546,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-base font-medium text-gray-700\",\n                    children: \"Khai v\\u1ECB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-base font-medium text-gray-700\",\n                    children: \"M\\xF3n ch\\xEDnh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-base font-medium text-gray-700\",\n                    children: \"Tr\\xE1ng mi\\u1EC7ng\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 21\n            }, this)]\n          }, set.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }, this);\n        }, \"wpSV0FC/toaPbJBGpESKHDbUyLQ=\", false, function () {\n          return [useSpring];\n        })), \"wpSV0FC/toaPbJBGpESKHDbUyLQ=\", false, function () {\n          return [useSpring];\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n};\n_s2(MenuManager, \"yn7VEhy11ISqP4B7mEyeXFHm7YU=\");\n_c = MenuManager;\nexport default MenuManager;\nvar _c;\n$RefreshReg$(_c, \"MenuManager\");","map":{"version":3,"names":["_jsxFileName","_s2","$RefreshSig$","useState","useEffect","useMemo","useSpring","animated","jsxDEV","_jsxDEV","MenuManager","icon","_s","menuData","setMenuData","loading","setLoading","error","setError","expandedSet","setExpandedSet","fetchData","response","fetch","method","headers","ok","Error","status","data","json","setList","err","console","getImagePath","setName","log","startsWith","formattedName","replace","translateCategory","category","translations","Appetizer","Main","Dessert","countDishesByCategory","dishes","filter","dish","Category","length","handleToggleExpand","setId","className","children","fileName","lineNumber","columnNumber","onClick","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","fillRule","clipRule","map","set","remainingDishes","Dishes","springProps","from","height","opacity","to","id","config","tension","friction","Name","src","alt","onError","e","target","onerror","div","style","overflow","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["/home/dhpho/Programming/NCKH/admin-web/src/MenuManager.js"],"sourcesContent":["// // \"use client\";\n\n// // import { useState, useEffect, useMemo } from \"react\";\n// // import \"./Content.css\";\n\n// // const MenuManager = ({ icon }) => {\n// //   const [menuData, setMenuData] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   // Hàm lấy dữ liệu menu từ API\n// //   const fetchData = async () => {\n// //     try {\n// //       setLoading(true);\n// //       const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n// //         method: \"GET\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`Lỗi: ${response.status}`);\n// //       }\n\n// //       const data = await response.json();\n// //       setMenuData(data.setList || []);\n// //       setError(null);\n// //     } catch (err) {\n// //       console.error(\"Lấy dữ liệu menu thất bại:\", err);\n// //       setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   // Lấy dữ liệu khi component được mount\n// //   useEffect(() => {\n// //     fetchData();\n// //   }, []);\n\n// //   // Hàm lấy đường dẫn ảnh dựa trên tên set\n// //   const getImagePath = useMemo(() => {\n// //     return (setName) => {\n// //       console.log(setName);\n// //       if (setName === \"Hotpot\") {\n// //         return \"/assets/Buffet_Lau.png\";\n// //       } else if (setName === \"Seafood Hotpot\") {\n// //         return \"/assets/Buffet_Lau_Hai_San.png\";\n// //       } else if (setName === \"BBQ\") {\n// //         return \"/assets/Buffet_BBQ.png\";\n// //       } else if (setName.startsWith(\"Sashimi\")) {\n// //         const formattedName = setName.replace(/\\s+/g, \"_\");\n// //         console.log(`/assets/Buffet_${formattedName}.png`);\n// //         return `/assets/Buffet_${formattedName}.png`;\n// //       } else {\n// //         const formattedName = setName.replace(/\\s+/g, \"_\");\n// //         console.log(`/assets/Buffet_${formattedName}.png`);\n// //         return `/assets/Buffet_${formattedName}.png`;\n// //       }\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div className=\"dashboard-section\">\n// //       <div className=\"section-header\">\n// //         <div className=\"section-title\">\n// //           {icon && <span className=\"section-icon\">{icon}</span>}\n// //           <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n// //         </div>\n// //         <button onClick={fetchData} className=\"refresh-button\">\n// //           Làm mới Menu\n// //         </button>\n// //       </div>\n\n// //       <div className=\"section-content\">\n// //         {loading ? (\n// //           <div className=\"loading-container\">\n// //             <svg\n// //               className=\"animate-spin h-8 w-8 text-indigo-600\"\n// //               xmlns=\"http://www.w3.org/2000/svg\"\n// //               fill=\"none\"\n// //               viewBox=\"0 0 24 24\"\n// //             >\n// //               <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n// //               <path\n// //                 className=\"opacity-75\"\n// //                 fill=\"currentColor\"\n// //                 d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n// //               ></path>\n// //             </svg>\n// //           </div>\n// //         ) : error ? (\n// //           <div className=\"error-alert\">\n// //             <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n// //               <path\n// //                 fillRule=\"evenodd\"\n// //                 d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n// //                 clipRule=\"evenodd\"\n// //               ></path>\n// //             </svg>\n// //             <span>{error}</span>\n// //           </div>\n// //         ) : menuData.length === 0 ? (\n// //           <div className=\"empty-state\">\n// //             <p>Không tìm thấy mục menu.</p>\n// //           </div>\n// //         ) : (\n// //           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n// //             {menuData.map((set) => (\n// //               <div key={set.id} className=\"dashboard-card card-gradient-indigo\">\n// //                 <div className=\"card-content\">\n// //                   <div className=\"card-info\">\n// //                     <h3>{set.Name}</h3>\n// //                     <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n// //                     <p className=\"text-sm text-gray-500\">\n// //                       {set.Dishes ? `${set.Dishes.length} món` : \"Không có món nào\"}\n// //                     </p>\n// //                   </div>\n// //                   <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n// //                     <img\n// //                       src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n// //                       alt={set.Name}\n// //                       className=\"w-full h-full object-cover\"\n// //                       onError={(e) => {\n// //                         console.log(`Tải ảnh thất bại: ${e.target.src}`);\n// //                         e.target.onerror = null;\n// //                         e.target.src = \"/assets/default_set.png\";\n// //                       }}\n// //                     />\n// //                   </div>\n// //                 </div>\n// //               </div>\n// //             ))}\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default MenuManager;\n\n// \"use client\";\n\n// import { useState, useEffect, useMemo } from \"react\";\n// import \"./Content.css\";\n\n// const MenuManager = ({ icon }) => {\n//   const [menuData, setMenuData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [expandedSet, setExpandedSet] = useState(null); // Trạng thái mở rộng\n\n//   // Hàm lấy dữ liệu menu từ API\n//   const fetchData = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Lỗi: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setMenuData(data.setList || []);\n//       setError(null);\n//     } catch (err) {\n//       console.error(\"Lấy dữ liệu menu thất bại:\", err);\n//       setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Lấy dữ liệu khi component được mount\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   // Hàm lấy đường dẫn ảnh dựa trên tên set\n//   const getImagePath = useMemo(() => {\n//     return (setName) => {\n//       console.log(setName);\n//       if (setName === \"Hotpot\") {\n//         return \"/assets/Buffet_Lau.png\";\n//       } else if (setName === \"Seafood Hotpot\") {\n//         return \"/assets/Buffet_Lau_Hai_San.png\";\n//       } else if (setName === \"BBQ\") {\n//         return \"/assets/Buffet_BBQ.png\";\n//       } else if (setName.startsWith(\"Sashimi\")) {\n//         const formattedName = setName.replace(/\\s+/g, \"_\");\n//         console.log(`/assets/Buffet_${formattedName}.png`);\n//         return `/assets/Buffet_${formattedName}.png`;\n//       } else {\n//         const formattedName = setName.replace(/\\s+/g, \"_\");\n//         console.log(`/assets/Buffet_${formattedName}.png`);\n//         return `/assets/Buffet_${formattedName}.png`;\n//       }\n//     };\n//   }, []);\n\n//   // Hàm dịch Category sang tiếng Việt\n//   const translateCategory = (category) => {\n//     const translations = {\n//       Appetizer: \"Khai vị\",\n//       Main: \"Món chính\",\n//       Dessert: \"Tráng miệng\",\n//     };\n//     return translations[category] || category; // Trả về category gốc nếu không có bản dịch\n//   };\n\n//   // Hàm xử lý nhấp để mở rộng/đóng mục menu\n//   const handleToggleExpand = (setId) => {\n//     setExpandedSet(expandedSet === setId ? null : setId); // Toggle trạng thái\n//   };\n\n//   return (\n//     <div className=\"dashboard-section\">\n//       <div className=\"section-header\">\n//         <div className=\"section-title\">\n//           {icon && <span className=\"section-icon\">{icon}</span>}\n//           <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n//         </div>\n//         <button onClick={fetchData} className=\"refresh-button\">\n//           Làm mới Menu\n//         </button>\n//       </div>\n\n//       <div className=\"section-content\">\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <svg\n//               className=\"animate-spin h-8 w-8 text-indigo-600\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               fill=\"none\"\n//               viewBox=\"0 0 24 24\"\n//             >\n//               <circle\n//                 className=\"opacity-25\"\n//                 cx=\"12\"\n//                 cy=\"12\"\n//                 r=\"10\"\n//                 stroke=\"currentColor\"\n//                 strokeWidth=\"4\"\n//               ></circle>\n//               <path\n//                 className=\"opacity-75\"\n//                 fill=\"currentColor\"\n//                 d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n//               ></path>\n//             </svg>\n//           </div>\n//         ) : error ? (\n//           <div className=\"error-alert\">\n//             <svg\n//               className=\"w-5 h-5\"\n//               fill=\"currentColor\"\n//               viewBox=\"0 0 20 20\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//             >\n//               <path\n//                 fillRule=\"evenodd\"\n//                 d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n//                 clipRule=\"evenodd\"\n//               ></path>\n//             </svg>\n//             <span>{error}</span>\n//           </div>\n//         ) : menuData.length === 0 ? (\n//           <div className=\"empty-state\">\n//             <p>Không tìm thấy mục menu.</p>\n//           </div>\n//         ) : (\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n//             {menuData.map((set) => (\n//               <div\n//                 key={set.id}\n//                 className=\"dashboard-card card-gradient-indigo\"\n//               >\n//                 <div\n//                   className=\"card-content cursor-pointer\"\n//                   onClick={() => handleToggleExpand(set.id)}\n//                 >\n//                   <div className=\"card-info\">\n//                     <h3>{set.Name}</h3>\n//                     <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n//                     <p className=\"text-sm text-gray-500\">\n//                       {set.Dishes\n//                         ? `${set.Dishes.length} món`\n//                         : \"Không có món nào\"}\n//                     </p>\n//                   </div>\n//                   <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n//                     <img\n//                       src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n//                       alt={set.Name}\n//                       className=\"w-full h-full object-cover\"\n//                       onError={(e) => {\n//                         console.log(`Tải ảnh thất bại: ${e.target.src}`);\n//                         e.target.onerror = null;\n//                         e.target.src = \"/assets/default_set.png\";\n//                       }}\n//                     />\n//                   </div>\n//                 </div>\n//                 {expandedSet === set.id && set.Dishes && set.Dishes.length > 0 && (\n//                   <div className=\"dishes-list p-4 bg-gray-50 border-t border-gray-200\">\n//                     <h4 className=\"text-sm font-medium text-gray-700 mb-2\">\n//                       Danh sách món ăn\n//                     </h4>\n//                     <ul className=\"space-y-2\">\n//                       {set.Dishes.map((dish, index) => (\n//                         <li\n//                           key={index}\n//                           className=\"text-sm text-gray-600 flex justify-between\"\n//                         >\n//                           <span>{dish.Name}</span>\n//                           <span>{translateCategory(dish.Category)}</span>\n//                         </li>\n//                       ))}\n//                     </ul>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MenuManager;\n\n\"use client\";\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { useSpring, animated } from \"@react-spring/web\"; // Thêm react-spring\nimport \"./Content.css\";\n\nconst MenuManager = ({ icon }) => {\n  const [menuData, setMenuData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedSet, setExpandedSet] = useState(null); // Trạng thái mở rộng\n\n  // Hàm lấy dữ liệu menu từ API\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8080/api/buffets/menu\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Lỗi: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setMenuData(data.setList || []);\n      setError(null);\n    } catch (err) {\n      console.error(\"Lấy dữ liệu menu thất bại:\", err);\n      setError(\"Không thể tải dữ liệu menu. Vui lòng thử lại sau.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Lấy dữ liệu khi component được mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Hàm lấy đường dẫn ảnh dựa trên tên set\n  const getImagePath = useMemo(() => {\n    return (setName) => {\n      console.log(setName);\n      if (setName === \"Hotpot\") {\n        return \"/assets/Buffet_Lau.png\";\n      } else if (setName === \"Seafood Hotpot\") {\n        return \"/assets/Buffet_Lau_Hai_San.png\";\n      } else if (setName === \"BBQ\") {\n        return \"/assets/Buffet_BBQ.png\";\n      } else if (setName.startsWith(\"Sashimi\")) {\n        const formattedName = setName.replace(/\\s+/g, \"_\");\n        console.log(`/assets/Buffet_${formattedName}.png`);\n        return `/assets/Buffet_${formattedName}.png`;\n      } else {\n        const formattedName = setName.replace(/\\s+/g, \"_\");\n        console.log(`/assets/Buffet_${formattedName}.png`);\n        return `/assets/Buffet_${formattedName}.png`;\n      }\n    };\n  }, []);\n\n  // Hàm dịch Category sang tiếng Việt và đếm số món còn lại\n  const translateCategory = (category) => {\n    const translations = {\n      Appetizer: \"Khai vị\",\n      Main: \"Món chính\",\n      Dessert: \"Tráng miệng\",\n    };\n    return translations[category] || category;\n  };\n\n  // Hàm đếm số món theo category\n  const countDishesByCategory = (dishes, category) => {\n    return dishes.filter((dish) => dish.Category === category).length;\n  };\n\n  // Hàm xử lý nhấp để mở rộng/đóng mục menu\n  const handleToggleExpand = (setId) => {\n    setExpandedSet(expandedSet === setId ? null : setId); // Toggle trạng thái\n  };\n\n  return (\n    <div className=\"dashboard-section\">\n      <div className=\"section-header\">\n        <div className=\"section-title\">\n          {icon && <span className=\"section-icon\">{icon}</span>}\n          <h2 className=\"text-lg font-medium text-gray-900\">Menu</h2>\n        </div>\n        <button onClick={fetchData} className=\"refresh-button\">\n          Làm mới Menu\n        </button>\n      </div>\n\n      <div className=\"section-content\">\n        {loading ? (\n          <div className=\"loading-container\">\n            <svg\n              className=\"animate-spin h-8 w-8 text-indigo-600\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle\n                className=\"opacity-25\"\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                stroke=\"currentColor\"\n                strokeWidth=\"4\"\n              ></circle>\n              <path\n                className=\"opacity-75\"\n                fill=\"currentColor\"\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n              ></path>\n            </svg>\n          </div>\n        ) : error ? (\n          <div className=\"error-alert\">\n            <svg\n              className=\"w-5 h-5\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n                clipRule=\"evenodd\"\n              ></path>\n            </svg>\n            <span>{error}</span>\n          </div>\n        ) : menuData.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>Không tìm thấy mục menu.</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {menuData.map((set) => {\n              // Tính số món còn lại (giả sử hiển thị \"Còn 0...\")\n              const remainingDishes = set.Dishes ? set.Dishes.length : 0;\n\n              // Hiệu ứng mở rộng bằng react-spring\n              const springProps = useSpring({\n                from: { height: 0, opacity: 0 },\n                to: {\n                  height: expandedSet === set.id ? \"auto\" : 0,\n                  opacity: expandedSet === set.id ? 1 : 0,\n                },\n                config: { tension: 200, friction: 20 }, // Điều chỉnh độ mượt của animation\n              });\n\n              return (\n                <div\n                  key={set.id}\n                  className=\"dashboard-card card-gradient-indigo\"\n                >\n                  <div\n                    className=\"card-content cursor-pointer\"\n                    onClick={() => handleToggleExpand(set.id)}\n                  >\n                    <div className=\"card-info\">\n                      <h3>{set.Name}</h3>\n                      <p className=\"text-sm text-gray-500\">ID Set: {set.id}</p>\n                      <p className=\"text-sm text-gray-500\">\n                        {set.Dishes\n                          ? `${set.Dishes.length} món`\n                          : \"Không có món nào\"}\n                      </p>\n                    </div>\n                    <div className=\"w-24 h-24 overflow-hidden rounded-lg\">\n                      <img\n                        src={getImagePath(set.Name) || \"/assets/default_set.png\"}\n                        alt={set.Name}\n                        className=\"w-full h-full object-cover\"\n                        onError={(e) => {\n                          console.log(`Tải ảnh thất bại: ${e.target.src}`);\n                          e.target.onerror = null;\n                          e.target.src = \"/assets/default_set.png\";\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  {/* Phần mở rộng với hiệu ứng trượt */}\n                  {set.Dishes && set.Dishes.length > 0 && (\n                    <animated.div\n                      style={{\n                        ...springProps,\n                        overflow: \"hidden\",\n                      }}\n                    >\n                      <div className=\"dishes-list p-4 bg-white border border-gray-200 rounded-lg shadow-md mt-2\">\n                        {/* Header với số lượng món còn lại */}\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <div></div> {/* Để trống bên trái cho giống ảnh */}\n                          <div className=\"flex items-center space-x-2\">\n                            <span className=\"text-sm font-medium text-gray-700\">\n                              Còn {remainingDishes}...\n                            </span>\n                            <svg\n                              className={`w-4 h-4 transform transition-transform ${\n                                expandedSet === set.id ? \"rotate-180\" : \"\"\n                              }`}\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              viewBox=\"0 0 24 24\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M19 9l-7 7-7-7\"\n                              />\n                            </svg>\n                          </div>\n                        </div>\n\n                        {/* Danh sách các loại món ăn */}\n                        <div className=\"space-y-2\">\n                          <div className=\"text-base font-medium text-gray-700\">\n                            Khai vị\n                          </div>\n                          <div className=\"text-base font-medium text-gray-700\">\n                            Món chính\n                          </div>\n                          <div className=\"text-base font-medium text-gray-700\">\n                            Tráng miệng\n                          </div>\n                        </div>\n                      </div>\n                    </animated.div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MenuManager;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}